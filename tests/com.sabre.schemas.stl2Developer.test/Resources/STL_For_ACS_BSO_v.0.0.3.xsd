<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://services.sabre.com/STL/v01" 
	xmlns:STL="http://services.sabre.com/STL/v01" 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
	attributeFormDefault="unqualified" elementFormDefault="qualified" 
	targetNamespace="http://services.sabre.com/STL/v01" 
	version="08">
  <xsd:annotation>
    <xsd:documentation>Generated by Contivo Builder on November 4, 2009 at 1:49:49 PM CST</xsd:documentation>
    <xsd:documentation>from the STL_SimpleTypes_v.0.0.6 package with namespace http://services.sabre.com/STL/v01</xsd:documentation>
  </xsd:annotation>
  <xsd:complexType name="Amount">
    <xsd:annotation>
      <xsd:documentation>Amount is a value upto 100 million with upto 3 decimal places. The currency  can be represented by 3 character code (prefered) or name.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="_amount">
        <xsd:attribute default="USD" name="currencyCode" type="CurrencyCodeList"/>
        <xsd:attribute name="currency" type="ProperName"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="CV_Score">
    <xsd:simpleContent>
      <xsd:extension base="Score">
        <xsd:attribute name="TDW" type="Score">
          <xsd:annotation>
            <xsd:documentation>Customer Value Calculator computed value computed by TDW</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="airline" type="Score">
          <xsd:annotation>
            <xsd:documentation>A score provided by the airline</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="override" type="Score">
          <xsd:annotation>
            <xsd:documentation>A score entered by manual override representing a minimum customer value score for the customer</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="overriideEffectiveDate" type="xsd:date"/>
        <xsd:attribute name="overrideDiscontinueDate" type="xsd:date"/>
        <xsd:attribute name="airlineEffectiveDate" type="xsd:date"/>
        <xsd:attribute name="airlineDiscontinueDate" type="xsd:date"/>
        <xsd:attribute name="TDWEffectiveDate" type="xsd:date"/>
        <xsd:attribute name="TDWDiscintinueDate" type="xsd:date"/>
        <xsd:anyAttribute namespace="##any" processContents="skip"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Equipment">
    <xsd:simpleContent>
      <xsd:extension base="Equipment.Code">
        <xsd:attribute name="name" type="StringLength1to64"/>
        <xsd:attribute default="false" name="change" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>"ChangeOfGuage" indicates a change of equipment. </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ErrorMessage">
    <xsd:annotation>
      <xsd:documentation>Free text and code provided by the application or system that detected the error. Contants may be anything the system detecting the error chooses to convey. Used by service consumers.  Codes and/or messages should be agreed upon by service users. Do not use for structured data, use parameters instead.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="StringLength0to4096">
        <xsd:attribute name="Code" type="xsd:integer"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Header.RQ">
    <xsd:annotation>
      <xsd:documentation>Sabre Standard Payload Header. Information in the header is intended to separate transport and processing information from actual message data. Header information may be replicated in the messaging system header (SOAP or JMS header). This data is inteded for use with content-based routing and other tasks asscociated with integration.  NOTE: messaging and transport systems may and should add content to the header whereas they should never change the actual message subject contents.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="Action" type="StringLength0to128">
        <xsd:annotation>
          <xsd:documentation>Details, qualifiers and parameters to the message action verb. </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="Subject" type="StringLength0to128">
        <xsd:annotation>
          <xsd:documentation>Details, qualifiers and parameters to the message subject noun. Typically will be used to request level of detail desired in the response or parameters not caputred by the query form of the noun.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="Messaging" type="MessagingRecords">
        <xsd:annotation>
          <xsd:documentation>Messaging section provides an area for each system interacting with the message to record a brief message about thier interactions. Service proxies and utility services such as transformation and validation should use this area to record when they processed the message and the resulting status.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element maxOccurs="100" minOccurs="0" name="Parameters" type="Parameters">
        <xsd:annotation>
          <xsd:documentation>Generalized name-value pairs. These parameters are intended for integration specific use only duriing development and testing. These parameters must not be relied upon for production operation.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element maxOccurs="0" minOccurs="0" name="Security" type="StringLength0to1023">
        <xsd:annotation>
          <xsd:documentation>TODO - include ICE header.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Header.RS">
    <xsd:annotation>
      <xsd:documentation>Sabre Standard Payload Header. Information in the header is intended to separate transport and processing information from actual message data. Header information may be replicated in the messaging system header (SOAP or JMS header). This data is inteded for use with content-based routing and other tasks asscociated with integration.  NOTE: messaging and transport systems may and should add content to the header whereas they should never change the actual message subject contents.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Results" type="ResultRecord">
        <xsd:annotation>
          <xsd:documentation>Response message header Results are used to exchange information about the nature of a failure or success. This record must be provided in successful service invocations.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="Messaging" type="MessagingRecords"/>
      <xsd:element maxOccurs="0" minOccurs="0" name="Security" type="StringLength0to1023">
        <xsd:annotation>
          <xsd:documentation>TODO - include ICE header.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="Parameters" type="Parameters">
        <xsd:annotation>
          <xsd:documentation>Generalized name-value pairs. These parameters are intended for integration specific use only duriing development and testing. These parameters must not be relied upon for production operation.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MessagingRecords">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="ServiceRequestor" type="MessagingSystemRecord"/>
      <xsd:element maxOccurs="100" minOccurs="0" name="RequestProxies" type="MessagingSystemRecord"/>
      <xsd:element minOccurs="0" name="ServiceProvider" type="MessagingSystemRecord"/>
      <xsd:element maxOccurs="100" minOccurs="0" name="ResponseProxies" type="MessagingSystemRecord"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MessagingSystemRecord">
    <xsd:annotation>
      <xsd:documentation>Text field used for intermediaries and proxies to record brief messages about the processes. Attributes record date-time and system identification information.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="StringLength0to128">
        <xsd:attribute name="StartTimeStamp" type="xsd:dateTime" use="required">
          <xsd:annotation>
            <xsd:documentation>When the system stated processing the message.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="EndTimeStamp" type="xsd:dateTime" use="required">
          <xsd:annotation>
            <xsd:documentation>When the system completed processing the message. Format is a sequence of characters of the form: '-'? yyyy '-' mm '-' dd 'T' hh ':' mm ':' ss ('.' s+)? (zzzzzz)?; for example, 2002-10-10T12:00:00+05:00. </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="SystemID" type="StringLength0to128" use="required">
          <xsd:annotation>
            <xsd:documentation>Unique identifier for the processing system.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="SystemName" type="StringLength0to128" use="required">
          <xsd:annotation>
            <xsd:documentation>Common name of the processing system.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Parameters">
    <xsd:annotation>
      <xsd:documentation>Name value pairs of parameters where the contents are the value associated with the name. Parameters are for deployment and operational flexibility and should not be relied upon in service design. Revisions to the service should migrate parameters into the message payload or message subject and action values.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="StringLength0to128">
        <xsd:attribute name="Name" type="StringLength0to128"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ResultRecord">
    <xsd:annotation>
      <xsd:documentation>Error type based on OTA 1.8 ErrorRS message. Added two error codes to have distinction between transport and messaging generated errors and errors detected by application logic.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:group ref="ResultCG"/>
      <xsd:element minOccurs="0" name="Severity" type="StringLength1to64">
        <xsd:annotation>
          <xsd:documentation>An optional indicator to reflect the severity of this condition.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ErrorMessage" type="ErrorMessage">
        <xsd:annotation>
          <xsd:documentation>Application specific Error code and Message. A textual description to provide more information about the specific error.&#13;
TODO - make into simple content type with code as numeric attribute&#13;
TODO - shorten names on TimeStamps</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ShortText" type="StringLength1to64">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="DocURL" type="xsd:anyURI">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute refers to an online description of the error that occurred.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="Element" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="RecordID" type="StringLength1to64">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:group ref="ResultCG"/>
      <xsd:group ref="ResultCG"/>
    </xsd:sequence>
    <xsd:attribute name="status" type="_StatusCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>If there is an error element it is assumed that the message was not processed unless the status is complete.&#13;
&#13;
Status is an indication of the processing that was completed on the request message.  An error response may be returned and no action taken on behalf of the request message, or there may be some action taken, or the full action may have been completed.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:simpleType name="AgentSine">
    <xsd:annotation>
      <xsd:documentation>Identifies a specific party within a POS entity.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="StringLength1to16"/>
  </xsd:simpleType>
  <xsd:simpleType name="AirlineCode">
    <xsd:annotation>
      <xsd:documentation>Preferred format for airline codes. Structure is 2 upper case alpha-numeric characters followed by an optional uppercase letter.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z0-9]{2}[A-Z]?"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AirlineCode.IATA">
    <xsd:annotation>
      <xsd:documentation>Type definition for 3 or 2 letter airline codes</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="2"/>
      <xsd:maxLength value="3"/>
      <xsd:pattern value="([A-Z]{3}|[A-Z]{2})|([0-9][A-Z])|([A-Z][0-9])"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AirlineCode.Merchandising">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z][A-Z0-9]{1}"/>
      <xsd:pattern value="[A-Z0-9][A-Z][A-Z0-9]?"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AirportCode">
    <xsd:annotation>
      <xsd:documentation>Same as IATA airport code format.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="UpperCaseAlphaNumericLength3to5"/>
  </xsd:simpleType>
  <xsd:simpleType name="AirportCode.Merchandising">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z]{3,5}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AlphaLength2">
    <xsd:annotation>
      <xsd:documentation>Used for an Alpha String, length exactly 2.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[a-zA-Z]{2}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AlphaNumericStringLength1">
    <xsd:annotation>
      <xsd:documentation>Used for Alpha-Numeric Strings, length 1.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9a-zA-Z]{1}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AlphaNumericStringLength1to10">
    <xsd:annotation>
      <xsd:documentation>Used for Alpha-Numeric Strings, length 1 to 8.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9a-zA-Z]{1,10}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AlphaNumericStringLength1to14">
    <xsd:annotation>
      <xsd:documentation>Used forAlpha-Numeric Strings, length 1 to 14.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9a-zA-Z]{1,14}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AlphaNumericStringLength1to19">
    <xsd:annotation>
      <xsd:documentation>Used forAlpha-Numeric Strings, length 1 to 19.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9a-zA-Z]{1,19}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AlphaNumericStringLength1to25">
    <xsd:annotation>
      <xsd:documentation>Used forAlpha-Numeric Strings, length 1 to 25.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9a-zA-Z]{1,19}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AlphaNumericStringLength1to5">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9a-zA-Z]{1,5}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AlphaNumericStringLength1to8">
    <xsd:annotation>
      <xsd:documentation>Used for Alpha-Numeric Strings, length 1 to 8.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9a-zA-Z]{1,8}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AlphaNumericStringLength2">
    <xsd:annotation>
      <xsd:documentation>Used for Alpha-Numeric Strings, length 1.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9a-zA-Z]{1}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ApplicationErrorCodes">
    <xsd:annotation>
      <xsd:documentation>Application Errors</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="DataError"/>
      <xsd:enumeration value="NotSupported"/>
      <xsd:enumeration value="SessionFailure"/>
      <xsd:enumeration value="Version"/>
      <xsd:enumeration value="XMLError"/>
      <xsd:enumeration value="Size"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BagCount">
    <xsd:restriction base="xsd:short"/>
  </xsd:simpleType>
  <xsd:simpleType name="CabinType.3Chars">
    <xsd:annotation>
      <xsd:documentation>Cabin type identified by upto 3 characters.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="UpperCaseAlphaLength1to3"/>
  </xsd:simpleType>
  <xsd:simpleType name="CityCode">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[a-zA-Z]{3}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ClientID.Merchandising">
    <xsd:annotation>
      <xsd:documentation>Name of the client calling the Ancillary Service, e.g., AVL - Availability, PRS - Pre Reserved Seats,
      					 ACS - Airport Check In, PNR - Passenger Name Record, SSW - Sabre Sonic Web, INT - InterAct).</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="UpperCaseAlpha">
      <xsd:enumeration value="AVL"/>
      <xsd:enumeration value="PRS"/>
      <xsd:enumeration value="ACS"/>
      <xsd:enumeration value="PNR"/>
      <xsd:enumeration value="SSW"/>
      <xsd:enumeration value="INT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CountryCode">
    <xsd:annotation>
      <xsd:documentation>Specifies a 2 character country code as defined in ISO3166.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[a-zA-Z]{2}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CurrencyCodeList">
    <xsd:annotation>
      <xsd:documentation>A code list that enumerates a currency that qualifies a monetary amount. Codes for the representation of currencies and funds from the International Organization for Standardization (ISO) 4217:2001.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="ADP"/>
      <xsd:enumeration value="AED"/>
      <xsd:enumeration value="AFA"/>
      <xsd:enumeration value="ALL"/>
      <xsd:enumeration value="AMD"/>
      <xsd:enumeration value="ANG"/>
      <xsd:enumeration value="AON"/>
      <xsd:enumeration value="AOR"/>
      <xsd:enumeration value="ARS"/>
      <xsd:enumeration value="ATS"/>
      <xsd:enumeration value="AUD"/>
      <xsd:enumeration value="AWG"/>
      <xsd:enumeration value="AZM"/>
      <xsd:enumeration value="BAM"/>
      <xsd:enumeration value="BBD"/>
      <xsd:enumeration value="BDT"/>
      <xsd:enumeration value="BEF"/>
      <xsd:enumeration value="BGL"/>
      <xsd:enumeration value="BGN"/>
      <xsd:enumeration value="BHD"/>
      <xsd:enumeration value="BIF"/>
      <xsd:enumeration value="BMD"/>
      <xsd:enumeration value="BND"/>
      <xsd:enumeration value="BRL"/>
      <xsd:enumeration value="BSD"/>
      <xsd:enumeration value="BTN"/>
      <xsd:enumeration value="BWP"/>
      <xsd:enumeration value="BYR"/>
      <xsd:enumeration value="BZD"/>
      <xsd:enumeration value="CAD"/>
      <xsd:enumeration value="CDF"/>
      <xsd:enumeration value="CHF"/>
      <xsd:enumeration value="CLF"/>
      <xsd:enumeration value="CLP"/>
      <xsd:enumeration value="CNY"/>
      <xsd:enumeration value="COP"/>
      <xsd:enumeration value="CRC"/>
      <xsd:enumeration value="CUP"/>
      <xsd:enumeration value="CVE"/>
      <xsd:enumeration value="CYP"/>
      <xsd:enumeration value="CZK"/>
      <xsd:enumeration value="DEM"/>
      <xsd:enumeration value="DJF"/>
      <xsd:enumeration value="DKK"/>
      <xsd:enumeration value="DOP"/>
      <xsd:enumeration value="DZD"/>
      <xsd:enumeration value="ECS"/>
      <xsd:enumeration value="ECV"/>
      <xsd:enumeration value="EEK"/>
      <xsd:enumeration value="EGP"/>
      <xsd:enumeration value="ERN"/>
      <xsd:enumeration value="ESP"/>
      <xsd:enumeration value="ETB"/>
      <xsd:enumeration value="EUR"/>
      <xsd:enumeration value="FIM"/>
      <xsd:enumeration value="FJD"/>
      <xsd:enumeration value="FKP"/>
      <xsd:enumeration value="FRF"/>
      <xsd:enumeration value="GBP"/>
      <xsd:enumeration value="GEL"/>
      <xsd:enumeration value="GHC"/>
      <xsd:enumeration value="GIP"/>
      <xsd:enumeration value="GMD"/>
      <xsd:enumeration value="GNF"/>
      <xsd:enumeration value="GRD"/>
      <xsd:enumeration value="GTQ"/>
      <xsd:enumeration value="GWP"/>
      <xsd:enumeration value="GYD"/>
      <xsd:enumeration value="HKD"/>
      <xsd:enumeration value="HNL"/>
      <xsd:enumeration value="HRK"/>
      <xsd:enumeration value="HTG"/>
      <xsd:enumeration value="HUF"/>
      <xsd:enumeration value="IDR"/>
      <xsd:enumeration value="IEP"/>
      <xsd:enumeration value="ILS"/>
      <xsd:enumeration value="INR"/>
      <xsd:enumeration value="IQD"/>
      <xsd:enumeration value="IRR"/>
      <xsd:enumeration value="ISK"/>
      <xsd:enumeration value="ITL"/>
      <xsd:enumeration value="JMD"/>
      <xsd:enumeration value="JOD"/>
      <xsd:enumeration value="JPY"/>
      <xsd:enumeration value="KES"/>
      <xsd:enumeration value="KGS"/>
      <xsd:enumeration value="KHR"/>
      <xsd:enumeration value="KMF"/>
      <xsd:enumeration value="KPW"/>
      <xsd:enumeration value="KRW"/>
      <xsd:enumeration value="KWD"/>
      <xsd:enumeration value="KYD"/>
      <xsd:enumeration value="KZT"/>
      <xsd:enumeration value="LAK"/>
      <xsd:enumeration value="LBP"/>
      <xsd:enumeration value="LKR"/>
      <xsd:enumeration value="LRD"/>
      <xsd:enumeration value="LSL"/>
      <xsd:enumeration value="LTL"/>
      <xsd:enumeration value="LUF"/>
      <xsd:enumeration value="LVL"/>
      <xsd:enumeration value="LYD"/>
      <xsd:enumeration value="MAD"/>
      <xsd:enumeration value="MDL"/>
      <xsd:enumeration value="MGF"/>
      <xsd:enumeration value="MKD"/>
      <xsd:enumeration value="MMK"/>
      <xsd:enumeration value="MNT"/>
      <xsd:enumeration value="MOP"/>
      <xsd:enumeration value="MRO"/>
      <xsd:enumeration value="MTL"/>
      <xsd:enumeration value="MUR"/>
      <xsd:enumeration value="MVR"/>
      <xsd:enumeration value="MWK"/>
      <xsd:enumeration value="MXN"/>
      <xsd:enumeration value="MXV"/>
      <xsd:enumeration value="MYR"/>
      <xsd:enumeration value="MZM"/>
      <xsd:enumeration value="NAD"/>
      <xsd:enumeration value="NGN"/>
      <xsd:enumeration value="NIO"/>
      <xsd:enumeration value="NLG"/>
      <xsd:enumeration value="NOK"/>
      <xsd:enumeration value="NPR"/>
      <xsd:enumeration value="NZD"/>
      <xsd:enumeration value="OMR"/>
      <xsd:enumeration value="PAB"/>
      <xsd:enumeration value="PEN"/>
      <xsd:enumeration value="PGK"/>
      <xsd:enumeration value="PHP"/>
      <xsd:enumeration value="PKR"/>
      <xsd:enumeration value="PLN"/>
      <xsd:enumeration value="PTE"/>
      <xsd:enumeration value="PYG"/>
      <xsd:enumeration value="QAR"/>
      <xsd:enumeration value="ROL"/>
      <xsd:enumeration value="RUB"/>
      <xsd:enumeration value="RUR"/>
      <xsd:enumeration value="RWF"/>
      <xsd:enumeration value="SAR"/>
      <xsd:enumeration value="SBD"/>
      <xsd:enumeration value="SCR"/>
      <xsd:enumeration value="SDD"/>
      <xsd:enumeration value="SEK"/>
      <xsd:enumeration value="SGD"/>
      <xsd:enumeration value="SHP"/>
      <xsd:enumeration value="SIT"/>
      <xsd:enumeration value="SKK"/>
      <xsd:enumeration value="SLL"/>
      <xsd:enumeration value="SOS"/>
      <xsd:enumeration value="SRG"/>
      <xsd:enumeration value="STD"/>
      <xsd:enumeration value="SVC"/>
      <xsd:enumeration value="SYP"/>
      <xsd:enumeration value="SZL"/>
      <xsd:enumeration value="THB"/>
      <xsd:enumeration value="TJR"/>
      <xsd:enumeration value="TJS"/>
      <xsd:enumeration value="TMM"/>
      <xsd:enumeration value="TND"/>
      <xsd:enumeration value="TOP"/>
      <xsd:enumeration value="TPE"/>
      <xsd:enumeration value="TRL"/>
      <xsd:enumeration value="TTD"/>
      <xsd:enumeration value="TWD"/>
      <xsd:enumeration value="TZS"/>
      <xsd:enumeration value="UAH"/>
      <xsd:enumeration value="UGX"/>
      <xsd:enumeration value="USD"/>
      <xsd:enumeration value="USN"/>
      <xsd:enumeration value="USS"/>
      <xsd:enumeration value="UYU"/>
      <xsd:enumeration value="UZS"/>
      <xsd:enumeration value="VEB"/>
      <xsd:enumeration value="VND"/>
      <xsd:enumeration value="VUV"/>
      <xsd:enumeration value="WST"/>
      <xsd:enumeration value="XAF"/>
      <xsd:enumeration value="XAG"/>
      <xsd:enumeration value="XAU"/>
      <xsd:enumeration value="XBA"/>
      <xsd:enumeration value="XBB"/>
      <xsd:enumeration value="XBC"/>
      <xsd:enumeration value="XBD"/>
      <xsd:enumeration value="XCD"/>
      <xsd:enumeration value="XDR"/>
      <xsd:enumeration value="XFO"/>
      <xsd:enumeration value="XFU"/>
      <xsd:enumeration value="XOF"/>
      <xsd:enumeration value="XPD"/>
      <xsd:enumeration value="XPF"/>
      <xsd:enumeration value="XPT"/>
      <xsd:enumeration value="XTS"/>
      <xsd:enumeration value="XXX"/>
      <xsd:enumeration value="YER"/>
      <xsd:enumeration value="YUM"/>
      <xsd:enumeration value="ZAL"/>
      <xsd:enumeration value="ZAR"/>
      <xsd:enumeration value="ZMK"/>
      <xsd:enumeration value="ZRN"/>
      <xsd:enumeration value="ZWD"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Date">
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <xsd:simpleType name="DateTime">
    <xsd:restriction base="xsd:dateTime"/>
  </xsd:simpleType>
  <xsd:simpleType name="DateYYYY-MM-DD.Merchandising">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[2][0-9]{3}-[0-1][0-9]-[0-3][0-9]"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Equipment.Code">
    <xsd:annotation>
      <xsd:documentation>Airline equipment code in 1 to 4 characters. Used for attributes. The Equipment simple content is the preferred type for elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="StringLength1to4"/>
  </xsd:simpleType>
  <xsd:simpleType name="FlightNumber">
    <xsd:annotation>
      <xsd:documentation>Identifies a flight number (1 to 4 numbers followed by optional uppercase A - Z, which specifies an operational suffix. Value may also be the enumerated or OPEN or ARNK. ARNK means Arrival Unknown. An OPEN air segment indicates the cities in the flight and the class of service for ticketing purposes but no flight number.&#13;
Leading zeros (0) are ignored. Note, Iberia uses leading 0 in flight numbers (ex: 0900 is different than 900).</xsd:documentation>
    </xsd:annotation>
    <xsd:union memberTypes="_flightNumberPattern _flightNumberLiterals"/>
  </xsd:simpleType>
  <xsd:simpleType name="FlightNumber.Base">
    <xsd:annotation>
      <xsd:documentation>1 to 4 digits without operational suffix and without the OPEN/ARNK literal values allowed.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z0-9]{1,4}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="GateName">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z\-0-9]{1,8}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Numeric1to3">
    <xsd:annotation>
      <xsd:documentation>Used for Numeric values, from 1 to 3 inclusive.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer">
      <xsd:minInclusive value="1"/>
      <xsd:maxInclusive value="3"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="NumericStringLength1">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9]{1}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ProperName">
    <xsd:restriction base="StringLength1to100"/>
  </xsd:simpleType>
  <xsd:simpleType name="PseudoCityCode.Merchandising">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9A-Z]{3,4}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="RequestedDetailLevel">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Full"/>
      <xsd:enumeration value="Summary"/>
      <xsd:enumeration value="Acknowledgement"/>
      <xsd:enumeration value="None"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Score">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="100"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="StringLength0to1023">
    <xsd:annotation>
      <xsd:documentation>Used for Character Strings, length 0 to 255.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="1023"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="StringLength0to128">
    <xsd:annotation>
      <xsd:documentation>Used for Character Strings, length 0 to 128.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="128"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="StringLength0to4096">
    <xsd:annotation>
      <xsd:documentation>Used for Character Strings, length 0 to 4096.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="4096"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="StringLength0to8">
    <xsd:annotation>
      <xsd:documentation>Used for Character Strings, length 0 to 8.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="8"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="StringLength1to100">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="100"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="StringLength1to16">
    <xsd:annotation>
      <xsd:documentation>Used for Character Strings, length 1 to 16.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="16"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="StringLength1to20">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="StringLength1to255">
    <xsd:annotation>
      <xsd:documentation>Used for Character Strings, length 1 to 255.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="StringLength1to4">
    <xsd:annotation>
      <xsd:documentation>Used for Character Strings, length 1 to 3.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="StringLength1to64">
    <xsd:annotation>
      <xsd:documentation>Used for Character Strings, length 1 to 64.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Success">
    <xsd:annotation>
      <xsd:documentation>Standard way to indicate successful processing of an OTA message. Returning an empty element of this type indicates success.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="StringLength0to8"/>
  </xsd:simpleType>
  <xsd:simpleType name="Text">
    <xsd:annotation>
      <xsd:documentation>A field of upto 255 text characters and not other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="StringLength1to255"/>
  </xsd:simpleType>
  <xsd:simpleType name="TransportErrorCodes">
    <xsd:annotation>
      <xsd:documentation>Error codes for use when the messaging and application systems have not delivered a validly formatted message.&#13;
&#13;
PADIS - &#13;
Do you want to use the PADIS values as standard transport errors designators?&#13;
Do you want to introduce those below as an enumeration of possible values or do you prefer not to directly bind PADIS codes to SOTA_Error definition?&#13;
&#13;
const int ERROR_TOO_MUCH_DATA             = 721;// too much data&#13;
const int ERROR_INVALID_ROUTING           = 724;// Invalid routing&#13;
const int ERROR_OVERFLOW                  = 738;// overflow&#13;
const int ERROR_TIME_OUT                  = 900;// inactivity time out value exceeded&#13;
const int ERROR_COMMUNICATION_UNAVAILABLE = 901;// communication line unavailable (from bridge to router...)&#13;
const int ERROR_FORMAT_DATA               = 914;// Invalid format/data&#13;
const int ERROR_NO_ACTION                 = 915;// No action - processing host cannot support function&#13;
const int ERROR_DEFAULT                   = 999;// Not Edifact Standard.&#13;
&#13;
TODO - &#13;
1) use numbers and associate words from OTA and PADIS&#13;
	- redefine 999&#13;
2) shorten application error list&#13;
3) add application specific code from ANY ##Other namespace</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="RoutingError"/>
      <xsd:enumeration value="Version"/>
      <xsd:enumeration value="XMLError"/>
      <xsd:enumeration value="Size"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UpperCaseAlpha">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z]+"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UpperCaseAlphaLength1">
    <xsd:annotation>
      <xsd:documentation>Used for an Alpha String, length 1 to 2 (for letter codes).</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z]{1}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UpperCaseAlphaLength1to2">
    <xsd:annotation>
      <xsd:documentation>Used for an Alpha String, length 1 to 2 (for letter codes).</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z]{1,2}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UpperCaseAlphaLength1to3">
    <xsd:annotation>
      <xsd:documentation>Used for an Alpha String, length 1 to 3 (for letter codes).</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z]{1,3}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UpperCaseAlphaLength6">
    <xsd:restriction base="UpperCaseAlpha">
      <xsd:length value="6"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UpperCaseAlphaNumericLength1">
    <xsd:annotation>
      <xsd:documentation>Used for an Upper Alpha String and Numeric, length 2 to 3.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z0-9]{1}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UpperCaseAlphaNumericLength1to3">
    <xsd:annotation>
      <xsd:documentation>Used for an Upper Alpha String and Numeric, length 2 to 3.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z0-9]{1,3}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UpperCaseAlphaNumericLength3to5">
    <xsd:annotation>
      <xsd:documentation>Used for an Upper Alpha String and Numeric, length 3 to 5.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z0-9]{3,5}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UpperCaseString">
    <xsd:annotation>
      <xsd:documentation>this matches all letters as defined in the XML spec. Known to not validate correctly in XMl Spy version 4.3. Alternatives such as [A-Z,0-9]+ would not include the same characters.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[\P{Ll}]+"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UpperCaseStringLength0to2">
    <xsd:restriction base="UpperCaseString">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UpperCaseStringLength0to64">
    <xsd:restriction base="UpperCaseString">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="60"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UpperCaseStringLength1to2">
    <xsd:restriction base="UpperCaseString">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UpperCaseStringLength1to30">
    <xsd:restriction base="UpperCaseString">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="30"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UpperCaseStringLength1to64">
    <xsd:restriction base="UpperCaseString">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UpperCaseStringLength3to5">
    <xsd:restriction base="UpperCaseString">
      <xsd:minLength value="3"/>
      <xsd:maxLength value="5"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="_StatusCodes">
    <xsd:restriction base="StringLength0to128">
      <xsd:enumeration value="NotProcessed"/>
      <xsd:enumeration value="Complete"/>
      <xsd:enumeration value="Incomplete"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="_amount">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="3"/>
      <xsd:maxInclusive value="100000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="_flightNumberLiterals">
    <xsd:annotation>
      <xsd:documentation>This private type enumerates flight number literals used for ground links and open segments in an itinerary.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="OPEN"/>
      <xsd:enumeration value="ARNK"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="_flightNumberPattern">
    <xsd:annotation>
      <xsd:documentation>This private simple type defines the base flight number structure: 1 to 4 digits followed by optional upper case letter. The upper case letter is a Operational Suffix used to distinguish two flights with the same number on the same day.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9]{1,4}[A-Z]?"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:group name="ResultCG">
    <xsd:annotation>
      <xsd:documentation>The results are one of:&#13;
Success - transaction processed successfully.&#13;
Application error - the message was xml valid but the application did not process it correctly. Standard list intended for use by messaging systems.&#13;
Transport error - the message was not delivered or was detected to be invalid. Standard list intended for use by messaging systems.&#13;
Note: Error message may but should not exist even if Success is indicated. </xsd:documentation>
      <xsd:documentation>The results are one of:&#13;
Success - transaction processed successfully.&#13;
Application error - the message was xml valid but the application did not process it correctly. Standard list intended for use by messaging systems.&#13;
Transport error - the message was not delivered or was detected to be invalid. Standard list intended for use by messaging systems.&#13;
Note: Error message may but should not exist even if Success is indicated.</xsd:documentation>
      <xsd:documentation>The results are one of:&#13;
Success - transaction processed successfully.&#13;
Application error - the message was xml valid but the application did not process it correctly. Standard list intended for use by messaging systems.&#13;
Transport error - the message was not delivered or was detected to be invalid. Standard list intended for use by messaging systems.&#13;
Note: Error message may but should not exist even if Success is indicated.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="Success" type="Success"/>
      <xsd:element name="ApplicationError" type="ApplicationErrorCodes">
        <xsd:annotation>
          <xsd:documentation>The ErrorCode attribute MUST be present and is defined as free-text with a list of recommended enumerated values, to indicate the application error type. Application errors are errors detected by the service provider when processing a request message that conformed to the service interface specifications.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="TransportError" type="TransportErrorCodes">
        <xsd:annotation>
          <xsd:documentation>Transport errors are errors detected by the systems transporting messages to the provider or consumer services.Transport errors include system availability and capacity problems and message detected to not conform the interface schemas.&#13;
&#13;
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
  </xsd:group>
</xsd:schema>
