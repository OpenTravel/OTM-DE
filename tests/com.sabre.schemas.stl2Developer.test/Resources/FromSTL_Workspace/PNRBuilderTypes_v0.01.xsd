<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://webservices.sabre.com/pnrbuilder"
	xmlns:pnrb="http://webservices.sabre.com/pnrbuilder" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	attributeFormDefault="unqualified" elementFormDefault="qualified"
	targetNamespace="http://webservices.sabre.com/pnrbuilder"
	xmlns:stl="http://services.sabre.com/STL/v01">
	
		<xsd:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL-SimpleTypes_v0.01.xsd"></xsd:import>
	
	<xsd:annotation>
		<xsd:documentation>Generated by Contivo Builder on March 26, 2009 at 4:17:49 PM CDT</xsd:documentation>
		<xsd:documentation>from the PNRBuilder_v.0.0.2 package with namespace http://webservices.sabre.com/pnrbuilder</xsd:documentation>
	</xsd:annotation>
	<xsd:annotation>
		<xsd:documentation>
		Throughout this Schema there is an attribute named "op". This attribute describes the operation 
		that is supposed to be executed for the element it is a memeber of. The possible values are 
		'C' for create, 'D' for delete and 'U' for update.
		</xsd:documentation>
	</xsd:annotation>
	
<!--	<xsd:element name="PNRCreateReservationRQ" type="PNRCreateReservationRQ" />-->
<!--	<xsd:element name="PNRCreateReservationRS" type="PNRCreateReservationRS" />-->
<!--	<xsd:element name="PNRUpdateReservationRQ" type="PNRUpdateReservationRQ" />-->
<!--	<xsd:element name="PNRUpdateReservationRS" type="PNRUpdateReservationRS" />-->

  <xsd:complexType name="Warnings.PNRB">
    <xsd:sequence>
      <xsd:element name="Warning" minOccurs="0" maxOccurs="unbounded">
      <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Code" type="xsd:string" minOccurs="0" />
            <xsd:element name="Message" type="xsd:string" minOccurs="0" />
            <xsd:element name="Severity" type="xsd:string" minOccurs="0" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="Errors.PNRB">
    <xsd:sequence>
      <xsd:element name="Error" minOccurs="0" maxOccurs="unbounded">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Code" type="xsd:string" minOccurs="0" />
            <xsd:element name="Message" type="xsd:string" minOccurs="0" />
            <xsd:element name="Severity" type="xsd:string" minOccurs="0" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>


	<xsd:complexType name="APISRequest.PNRB">
		<xsd:annotation>
			<xsd:documentation>Max line lengths

				* generic DOCS/DOCO - 108 chars
				after the first slash.
				Alphas, numerics, slashses and spaces are
				allowed. 
				*segment specific DOCS/DOCO - 91 chars after the first
				slash 
				* DOCA is variable. It is the same as DOCS and
				DOCO unless associated to more than one name. There is
				one less char allowed for
				each name to which the item is
				associated. 
				* the AFAX DOCA (4DOCA) has a max length of 127 chars
		</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="DOCAEntry" type="DOCAEntry.PNRB" />
			<xsd:element name="DOCOEntry" type="DOCOEntry.PNRB" />
			<xsd:element name="DOCSEntry" type="DOCSEntry.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="AccountingLine.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="TypeIndicator"
				type="UpperCaseStringLength1to19" />
			<xsd:element minOccurs="0" name="FareApplication"
				type="UpperCaseStringLength1to3" />
			<xsd:element minOccurs="0" name="FormOfPaymentCode"
				type="UpperCaseStringLength1to3" />
			<xsd:element minOccurs="0" name="LinkCode" type="UpperCaseStringLength1" />
			<xsd:element minOccurs="0" name="AccountingVendorCode"
				type="UpperCaseStringLength1to6" />
			<xsd:element minOccurs="0" name="ChargeCategoryCoded"
				type="UpperCaseStringLength1to3" />
			<xsd:element minOccurs="0" name="AirlineDesignator"
				type="UpperCaseStringLength1to3" />
			<xsd:element minOccurs="0" name="DocumentNumber"
				type="UpperCaseStringLength1to10" />
			<xsd:element minOccurs="0" name="CommissionPercentage"
				type="NumericStringLength1to10" />
			<xsd:element minOccurs="0" name="CommissionAmount"
				type="UpperCaseStringLength1to216" />
			<xsd:element minOccurs="0" name="BaseFare"
				type="NumericStringLength1to13" />
			<xsd:element minOccurs="0" name="BasePercent"
				type="UpperCaseStringLength1to3" />
			<xsd:element minOccurs="0" name="TaxPercentage"
				type="NumericStringLength1to10" />
			<xsd:element minOccurs="0" name="TaxAmount"
				type="NumericStringLength1to20" />
			<xsd:element minOccurs="0" name="TaxSurchargeCode2"
				type="UpperCaseStringLength1to2" />
			<xsd:element minOccurs="0" name="GSTAmount"
				type="UpperCaseStringLength1to10" />
			<xsd:element minOccurs="0" name="GSTPercent"
				type="UpperCaseStringLength1to7" />
			<xsd:element minOccurs="0" name="QSTCode" type="UpperCaseStringLength1" />
			<xsd:element minOccurs="0" name="QSTAmount"
				type="UpperCaseStringLength1to10" />
			<xsd:element minOccurs="0" name="QSTPercent"
				type="UpperCaseStringLength1to7" />
			<xsd:element minOccurs="0" name="CreditCardNumber" type="PaymentCardNumber" />
			<xsd:element minOccurs="0" name="CreditCardCode" type="PaymentCardCode" />
			<xsd:element minOccurs="0" name="PassengerName"
				type="UpperCaseStringLength1to98" />
			<xsd:element minOccurs="0" name="NumberOfConjunctedDocuments"
				type="NumericStringLength1" />
			<xsd:element minOccurs="0" name="NumberOfCoupons"
				type="UpperCaseStringLength1to10" />
			<xsd:element minOccurs="0" name="OriginalTicketNumber"
				type="UpperCaseStringLength1to13" />
			<xsd:element minOccurs="0" name="OriginalDateOfIssue"
				type="UpperCaseStringLength1to9" />
			<xsd:element minOccurs="0" name="OriginalPlaceOfIssue"
				type="UpperCaseStringLength1to5" />
			<xsd:element minOccurs="0" name="FullPartialExchangeIndicator"
				type="UpperCaseStringLength1" />
			<xsd:element minOccurs="0" name="OriginalInvoice" type="NumericStringLength1to7" />
			<xsd:element minOccurs="0" name="TarriffBasis" type="UpperCaseStringLength1" />
			<xsd:element minOccurs="0" name="FreeFormText"
				type="UpperCaseStringLength1to70" />
			<xsd:element minOccurs="0" name="CurrencyCode"
				type="UpperCaseStringLength1to3" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="AccountingLines.PNRB">
		<xsd:sequence>
			<xsd:element maxOccurs="99" name="AccountingLine" type="AccountingLine.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Address.PNRB">
		<xsd:annotation>
			<xsd:documentation>Agency address restrictions:

				* minimum 1 line, max
				6 ones * each line has a max of 50
				chars

				Client address restrictions:

				* minimum 1 line, max 6 lines * each line has a max of
				50 chars

				Delivery address restrictions

				* minimum 1 line, max 6 lines * each
				line has a max of
				39 chars

				Formats for addresses:

				* add agency address

				W-(agency name)‡(street address)‡(city/state or
				country/zip or postal
				code)
				W-ABC TRAVEL‡123 MAIN ST‡DALLAS TX 75201

				* add agency address
				when more
				than 50 chars

				W-(agency name)‡(street address) W-(address
				line # to
				insert after)/(city/state or country/zip or postal code)
				W-ABC
				TRAVEL‡123 MAIN ST W-2/DALLAS TX 75201

				* insert agency address
				line
				W-(address line # to insert
				after)/(address)
				W-3/LANGENBERHEIMERSTR.
				21

				* delete entire address field W-¤

				* delete
				specific address line

				W-(line #)¤ W-1¤

				* entry customer address into
				remarks for printing
				on
				invoice/itinerary

				5/(name)§5/(address)§5/(city),(state code or
				country
				code if not
				US)(postal code)) 5/T KHOSROVI§5/123 MAIN
				ST§5/DALLAS, TX 76101)

				*
				modify the client address within the remarks
				field

				5(line #)¤/(new
				text) 53¤/65073 DIESBURG

				* add delivery address
				5DL-(address info)
				5DL-DELIVER TO
				KIRK HADEO 5DL-ESTERHAZY #106
				5DL-KOENJI MINAMI 5-4-12
				5DL-SUGINAMI-KU, TOKYO 166 5DL-JAPAN</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="Name"
				type="UpperCaseStringLength1to50" />
			<xsd:element minOccurs="0" name="NumberAndStreet"
				type="UpperCaseStringLength1to50" />
			<xsd:element minOccurs="0" name="City"
				type="UpperCaseStringLength1to50" />
			<xsd:element minOccurs="0" name="StateProvince"
				type="UpperCaseStringLength1to50" />
			<xsd:element minOccurs="0" name="Country"
				type="UpperCaseStringLength1to50" />
			<xsd:element minOccurs="0" name="PostCode"
				type="UpperCaseStringLength1to50" />
			<xsd:element minOccurs="0" name="AddressLines" type="AddressLines.PNRB" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="type" type="stl:AddressType.ACD.PNRB">
			<xsd:annotation>
				<xsd:documentation>can be A = agency, C = client, D = delivery</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="AddressLine.PNRB">
		<xsd:sequence>
			<xsd:element name="Text" type="UpperCaseStringLength1to50" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="index" type="Numeric1to999" />
	</xsd:complexType>
	<xsd:complexType name="AddressLines.PNRB">
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" name="AddressLine"
				type="AddressLine.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Addresses.PNRB">
		<xsd:annotation>
			<xsd:documentation>There can be only one address for each of the
				following:
				agency, client and delivery.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="3" minOccurs="0" name="Address"
				type="Address.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="AirSegment.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="StatusCode"
				type="UpperCaseStringLength1to4" />
			<xsd:element minOccurs="0" name="NumberOfSeats" type="Numeric1to99" />
			<xsd:element minOccurs="0" name="AirlineDesignator" type="AirlineCode" />
			<xsd:element minOccurs="0" name="ClassOfService"
				type="UpperCaseStringLength1to2" />
			<xsd:element minOccurs="0" name="FlightNumber" type="FlightNumber" />
			<xsd:element minOccurs="0" name="NumberOfStops" type="Numeric1to99" />
			<xsd:element minOccurs="0" name="SegmentTag"
				type="UpperCaseStringLength1to75" />
			<xsd:element minOccurs="0" name="SpecialMeal" type="xsd:boolean" />
			<xsd:element minOccurs="0" name="DepartureTime" type="xsd:dateTime" />
			<xsd:element minOccurs="0" name="FlightStatusDescription"
				type="UpperCaseStringLength1to55" />
			<xsd:element minOccurs="0" name="ETicketEligibilityIndicator"
				type="UpperCaseStringLength1to3" />
			<xsd:element minOccurs="0" name="ConnectionIndicator"
				type="UpperCaseStringLength1to2" />
			<xsd:element minOccurs="0" name="MarriedConnectionIndicator"
				type="UpperCaseStringLength1to2" />
			<xsd:element minOccurs="0" name="SegmentSpecialRequests"
				type="ItinerarySpecialRequests.PNRB" />
			<xsd:element minOccurs="0" name="PreReservedSeats" type="PreReservedSeats.PNRB" />
			<xsd:element minOccurs="0" name="FrequentFlyer" type="Loyalty.PNRB" />
		</xsd:sequence>
		<xsd:attribute name="index" type="Numeric1to9999" />
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="AirSegmentARNK.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="SurfaceSegmentIndicator"
				type="UpperCaseStringLength1to4" />
		</xsd:sequence>
		<xsd:attribute name="segmentNumber" type="Numeric1to99" />
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="AirSegmentBundledSell.PNRB">
		<xsd:sequence>
			<xsd:element name="ClassOfService" type="UpperCaseStringLength1to128" />
			<xsd:element name="AirlineCode" type="AirlineCode" />
			<xsd:element name="DepartureDate" type="xsd:date" />
			<xsd:element name="DepartureCity" type="CityCode" />
			<xsd:element name="ArrivalCity" type="CityCode" />
			<xsd:element minOccurs="0" name="ConnectingCity" type="CityCode" />
			<xsd:element name="DepartureTime" type="xsd:time" />
			<xsd:element name="FlightNumber" type="FlightNumber" />
			<xsd:element name="ArrivalDate" type="xsd:date" />
			<xsd:element name="ArrivalTime" type="xsd:time" />
			<xsd:element minOccurs="0" name="NumberOfStops" type="xsd:int" />
			<xsd:element name="StatusCode" type="UpperCaseStringLength1to128" />
			<xsd:element minOccurs="0" name="SegmentSpecialRequests"
				type="ItinerarySpecialRequests.PNRB" />
			<xsd:element minOccurs="0" name="FrequentFlyer" type="Loyalty.PNRB" />
		</xsd:sequence>
		<xsd:attribute name="segmentNumber" type="Numeric1to99" />
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="type" type="AirSegmentType.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="AirSegmentMultiLeg.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="AirlineDesignator" type="AirlineCode" />
			<xsd:element minOccurs="0" name="AircraftTypeCode"
				type="UpperCaseStringLength1to3" />
			<xsd:element minOccurs="0" name="DepartureDate" type="xsd:date" />
			<xsd:element minOccurs="0" name="DepartureTime"
				type="UpperCaseStringLength4to5" />
			<xsd:element minOccurs="0" name="ArrivalDate"
				type="UpperCaseStringLength5to9" />
			<xsd:element minOccurs="0" name="ArrivalTime"
				type="UpperCaseStringLength4to5" />
			<xsd:element minOccurs="0" name="MealCode1"
				type="UpperCaseStringLength1to3" />
			<xsd:element minOccurs="0" name="MealCode2"
				type="UpperCaseStringLength1to3" />
			<xsd:element minOccurs="0" name="MealCode3"
				type="UpperCaseStringLength1to3" />
			<xsd:element minOccurs="0" name="DayOfWeekIndicator"
				type="NumericStringLength1" />
			<xsd:element minOccurs="0" name="DayOfWeek" type="DayOfWeek" />
			<xsd:element minOccurs="0" name="ElapsedTime"
				type="UpperCaseStringLength1to5" />
			<xsd:element minOccurs="0" name="AirMilesFlown"
				type="UpperCaseStringLength1to5" />
			<xsd:element minOccurs="0" name="SmokingPrefOfferedIndicator"
				type="xsd:boolean" />
			<xsd:element minOccurs="0" name="OperatingAirlineDesignator"
				type="AirlineCode" />
			<xsd:element minOccurs="0" name="AirlineName"
				type="UpperCaseStringLength1to45" />
			<xsd:element minOccurs="0" name="SegmentSpecialRequests"
				type="ItinerarySpecialRequests.PNRB" />
			<xsd:element minOccurs="0" name="PreReservedSeats" type="PreReservedSeats.PNRB" />
			<xsd:element minOccurs="0" name="FrequentFlyer" type="Loyalty.PNRB" />
		</xsd:sequence>
		<xsd:attribute name="segmentNumber" type="Numeric1to999" />
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="AirSegmentOpen.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="StatusCode"
				type="UpperCaseStringLength1to4" />
			<xsd:element minOccurs="0" name="UnitsBooked"
				type="UpperCaseStringLength1to5" />
			<xsd:element minOccurs="0" name="AirlineDesignator"
				type="UpperCaseStringLength1to3" />
			<xsd:element minOccurs="0" name="ClassOfService"
				type="UpperCaseStringLength1to2" />
			<xsd:element minOccurs="0" name="DepartureDate"
				type="UpperCaseStringLength5to9" />
			<xsd:element minOccurs="0" name="DepartureTime"
				type="UpperCaseStringLength4to5" />
			<xsd:element minOccurs="0" name="DayOfWeekIndicator"
				type="NumericStringLength1" />
			<xsd:element minOccurs="0" name="SegmentSpecialRequests"
				type="ItinerarySpecialRequests.PNRB" />
			<xsd:element minOccurs="0" name="PreReservedSeats" type="PreReservedSeats.PNRB" />
			<xsd:element minOccurs="0" name="FrequentFlyer" type="Loyalty.PNRB" />
		</xsd:sequence>
		<xsd:attribute name="segmentNumber" type="Numeric1to999" />
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="AirSegmentSellFromBSGInventory.PNRB">
		<xsd:sequence>
			<xsd:element name="BSGPNRRecordLocator" type="UpperCaseStringLength6" />
			<xsd:element name="NumberInParty" type="Numeric1to99" />
			<xsd:element minOccurs="0" name="SegmentSpecialRequests"
				type="ItinerarySpecialRequests.PNRB" />
			<xsd:element minOccurs="0" name="FrequentFlyer" type="Loyalty.PNRB" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="segmentNumber" type="Numeric1to999" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="AlreadyTicketed.PNRB">
		<xsd:annotation>
			<xsd:documentation>* enter ticketing field to show that the PNR is already
				ticketed 7T-A

				* enter ticketing field to show that the PNR is already
				ticketed and include optional data 7T-A/(free text)

				7T-A/07JAN

				Free text area max 22 chars</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="Comment"
				type="UpperCaseStringLength1to22" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="AssociatedPNRSummaries.PNRB">
		<xsd:sequence>
			<xsd:element maxOccurs="999" name="AssociatedPNRSummary"
				type="AssociatedPNRSummary.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="AssociatedPNRSummary.PNRB">
		<xsd:sequence>
			<xsd:element name="RecordLocator" type="UpperCaseAlphaLength6" />
			<xsd:element minOccurs="0" name="NumberOfSeats" type="Numeric0to99" />
			<xsd:element minOccurs="0" name="TicketingTimeLimitInfo" type="UpperCaseStringLength1to127" />
			<xsd:element minOccurs="0" name="FreeText" type="UpperCaseStringLength1to30" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="BNumberPayment.PNRB">
		<xsd:complexContent>
			<xsd:extension base="Payment.PNRB">
				<xsd:sequence>
					<xsd:element name="FormOfPaymentInfo" type="UpperCaseStringLength1to128" />
					<xsd:element name="BNumber" type="UpperCaseStringLength1to128" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="BSGAssociatedReferenceInformation">
		<xsd:sequence>
			<xsd:element name="OriginalNumberOfSeats" type="NumericStringLength1to2" />
			<xsd:element name="CurrentNumberOfSeats" type="NumericStringLength1to2" />
			<xsd:element name="AvailableNumberOfSeats" type="NumericStringLength1to2" />
			<xsd:element name="SoldNumberOfSeats" type="NumericStringLength1to2" />
			<xsd:element minOccurs="0" name="AssociatedPNRSummaries"
				type="AssociatedPNRSummaries.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="BSGReservation.PNRB">
		<xsd:sequence>
			<xsd:element name="Segments" type="AirSegmentSellFromBSGInventory.PNRB" />
			<xsd:element name="TicketingInfo" type="TicketingTimeLimit.PNRB" />
			<xsd:element name="AssociatedReferenceInformation" type="BSGAssociatedReferenceInformation" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="BookingChannel.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="CompanyName" type="CompanyNameType">
				<xsd:annotation>
					<xsd:documentation>Identifies	the company that is associated with the booking channel.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attributeGroup ref="BookingChannelGroup" />
	</xsd:complexType>
	<xsd:complexType name="ChildRequest.PNRB">
		<xsd:sequence>
			<xsd:element name="DateOfBirth" type="UpperCaseStringLength5to9" />
			<xsd:element minOccurs="0" name="FlightNumber" type="FlightNumber" />
			<xsd:element minOccurs="0" name="VendorCode" type="UpperCaseStringLength2" />
			<xsd:element minOccurs="0" name="FlightDate" type="UpperCaseStringLength1to10" />
			<xsd:element minOccurs="0" name="BoardCity" type="CityCode" />
			<xsd:element minOccurs="0" name="OffCity" type="CityCode" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="type" type="stl:RequestType.PNRB">
			<xsd:annotation>
				<xsd:documentation>A = AFAX G = GFAX</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="CompanyNameType">
		<xsd:simpleContent>
			<xsd:extension base="StringLength0to128">
				<xsd:attributeGroup ref="CompanyID_AttributesGroup" />
				<xsd:attribute name="Division">
					<xsd:annotation>
						<xsd:documentation>The division name or ID with which the contact is associated.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="Department">
					<xsd:annotation>
						<xsd:documentation>The department name or ID with which the contact is associated.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="CreditCardPayment.PNRB">
		<xsd:annotation>
			<xsd:documentation>Formats for FOP:

				* Form of payment B Number - BSP Netherlands only

				5-(FOP entry).B(number) 5-CHEQUE.B12345

				* add cash FOP

				5-CASH

				* add check FOP

				5-CHECK 5-CK 5-CHEQUE

				* add credit card FOP that generates an approval

				5-*(credit card code)(credit card number)‡(2-digit month
				of exp)(2-digit year of exp) 5-*AX1234567890123456‡XX/XX

				* suppress credit card number on invoice with form of
				payment in remarKs

				5-*(credit card code)(credit card #)‡(2-digit month of
				exp)/(2-digit year of ex)-XN
				5-*AX1234567890123456‡XX/XX-XN

				* add credit card form of payment that does not generate
				an approval

				5-(credit card code)(credit card #)‡(2-digit month of
				exp)/(2-digit year of exp) 5-AX1234567890123456‡XX/XX

				* add credit card with extended payment

				5-*(credit card code)(credit card number)‡(2-digit month
				of exp)/(2-digit year of exp)*(extendede payment entry
				if applicable)

				5-*AX1234567890123456‡XX/XX*E

				* add credit card with card security code

				5-*(credit card code)(credit card number)‡(2-digit month
				of exp)/(2-digit year of exp)(*extended payment entry if
				applicable)‡CSC/(2 letter airline code)
				5-*AX1234567890123456‡XX/XX‡1234/AL

				* add GTR

				5-GR‡(GTR entry) 5-GR‡K19876543002

				* add GTR when using it as a form of payment for travel
				on Delta airlines and you issue the ticket
				electronically

				5-GR(one letter followed by up to seven numbers)
				5-GRD9999999

				* delete form of payment

				5(line number)¤ 51¤

				* modify FOP

				5(line #)¤-(new FOP entry) 51¤-*AX1234567890123456‡XX/XX</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="Payment.PNRB">
				<xsd:sequence>
					<xsd:element name="CreditCardNumber" type="PaymentCardNumber">
						<xsd:annotation>
							<xsd:documentation>do not enter spaces</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="CreditCardCode" type="PaymentCardCode">
						<xsd:annotation>
							<xsd:documentation>the code for the appropriate credit card company</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ExpirationMonth" type="NumericStringLength2" />
					<xsd:element name="ExpirationYear" type="NumericStringLength2" />
					<xsd:element name="CSC" type="NumericStringLength3to4" />
					<xsd:element name="AirlineCode" type="AirlineCode.2to4Char" />
					<xsd:element name="RequestApprovalCode" type="xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>causes credit card form of payment to
								make a request for approval. The sabre
								system will request verification of the
								card and a validation check of the
								expiration date. this must be set to
								true for credit card masking to work.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="MonthsExtendedPayments" type="Numeric1to99" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="DOCAEntry.PNRB">
		<xsd:annotation>
			<xsd:documentation>Format:

				3DOCA(segment number)/(address
				type)/(country)/(street)/(city)/(state or province)/(zip
				or postal code)/(lap child indicator)/(pnr name assoc)

				* enter destinationa address info 3DOCA2/D/GB/10 DOWNING
				STREET/LONDON/EN/7A1 H30-2.1

				* lap child 3DOC12/D/USA/987 CENTER
				ST/AUSTIN/TX/76160/I-1.2

				* enter residence address info 3DOCA1/R/US/1234
				MAIN/EULESS/TX/76040-1.2

				* enter address info with multiple segment selection
				3DOCA2,3/R/GBR/14 CHARING RD/LONDON/EN/7A1 H3P

				* enter residence address with mandatory components only
				3DOCA/R/GB

				* enter desitnation address with mandatory components
				only 3DOCA/D/USA/SHERATON WAIKIKI/HONOLULU/HAWAII

				* delete a DOCA entry 3(line/itme number)¤ 37¤</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="AddressType" type="stl:AddressType.RD.PNRB">
				<xsd:annotation>
					<xsd:documentation>R = Residence D = Destination</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Country" type="UpperCaseAlphaLength2to3" />
			<xsd:element minOccurs="0" name="Street"
				type="UpperCaseStringLength1to35" />
			<xsd:element minOccurs="0" name="City"
				type="UpperCaseStringLength1to35" />
			<xsd:element minOccurs="0" name="StateProvince"
				type="UpperCaseStringLength1to35" />
			<xsd:element minOccurs="0" name="PostCode"
				type="UpperCaseStringLength1to17" />
			<xsd:element minOccurs="0" name="LapChild" type="xsd:boolean" />
			<xsd:element minOccurs="0" name="FreeText"
				type="UpperCaseStringLength1to216" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="type" type="stl:RequestType.PNRB">
			<xsd:annotation>
				<xsd:documentation>A = AFAX G = GFAX</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="DOCOEntry.PNRB">
		<xsd:annotation>
			<xsd:documentation>Formats:

				3DOCO(segment number)/(place of
				birth)/(document
				type)/(document number)/ (visa place of issue)/(visa
				issue date)/(visa applicable country)/ (lap child
				indicator)-(pnr
				name number)

				* enter visa info 3DOCO2/LYON FR/V/789789/PARIS
				FR/14JUN2005/CH-2.1

				* enter visa info, but omit place of birth
				3DOCO1//V/789789/HOUSTON/14JUN04/USA

				* enter only the place of birth
				(no other visa info is
				expected) 3DOCO1/MANCHESTER-1.1

				* omit visa
				info 3DOCO2/MUNICH/////2.1

				NOTE: If you omit the doc type in the
				entry, you must
				include the place of birth

				* enter visa info with
				multiple segment selection
				3DOCO1,3-5/MUNICH/V/789789/HOUSTON/14JUN04/USA

				* delete a DOCO entry
				3(line/item #)¤ 37¤</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="PlaceOfBirth"
				type="UpperCaseAlphaSpaceLength2to35">
				<xsd:annotation>
					<xsd:documentation>2-35 chars</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="DocumentType">
				<xsd:annotation>
					<xsd:documentation>if included the only valid option is V (visa)</xsd:documentation>
					<xsd:documentation>TODO - add explanation as to why this can only be a V and what source states this</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="V" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element minOccurs="0" name="DocumentNumber"
				type="UpperCaseStringLength1to15">
				<xsd:annotation>
					<xsd:documentation>max 15 chars</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="VisaPlaceOfIssue"
				type="UpperCaseAlphaSpaceLength2to35">
				<xsd:annotation>
					<xsd:documentation>max 35 chars</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="VisaIssueDate" type="xsd:date">
				<xsd:annotation>
					<xsd:documentation>ddmmmyy or ddmmmyyyy</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="VisaApplicableCountry"
				type="UpperCaseAlphaLength2to3">
				<xsd:annotation>
					<xsd:documentation>2 or 3 chars</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="LapChild" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation>this would be an "I" in the TPC
						command</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="FreeText"
				type="UpperCaseStringLength1to216" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="type" type="stl:RequestType.PNRB">
			<xsd:annotation>
				<xsd:documentation>A = AFAX G = GFAX</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="DOCSEntry.PNRB">
		<xsd:annotation>
			<xsd:documentation>Formats:

				3DOCS(segment number)/(doc type)/(doc
				issue
				country)/(doc #)/(doc nationality country)/
				(DOB)/(gender)/(doc
				exp date)/(last name)/(first
				name)/(middle name or initial)/ H-(pnr
				name number)

				* enter passport, or other various document types, and
				associated info
				3DOCS2/P/FR/123456789/FR/14AUG1947/M/30SEP2011/DELACROIX/DANIEL/STEPHANE/H-2.1

				NOTE: You cannot include Visa information with this
				format; you must
				use the DOCO formats for Visa

				* enter passenger info with multiple
				segment selection
				3DOCS1,3/P/DE/09876543211234/DE/25APR1949/F/04JUL2009/NGUYEN/LAN/M-3.1

				* enter passenger info, indicating a multiple passenger
				passport with
				a middle initial
				3DOCS/P/US/93845039290293/US/26FEB1974/M/10OCT2010/ENGLISH/MICHAEL/R/H-1.1

				* enter the passenger info using mandatory fields only
				3DOCS/P/US/2345928398234/US/12JUN1948/F/01JAN2011/SMITH
				JONES/JANICE-1

				* delete a DOCS entry 3 (line/item)¤ 37¤</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="DocumentType" type="DocumentType.PNRB" />
			<xsd:element minOccurs="0" name="CountryOfIssue"
				type="UpperCaseAlphaLength2to3">
				<xsd:annotation>
					<xsd:documentation>either 2 or 3 chars</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="DocumentNumber"
				type="UpperCaseStringLength1to15">
				<xsd:annotation>
					<xsd:documentation>max 15 chars</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="DocumentNationalityCountry" type="UpperCaseAlphaLength2to3" />
			<xsd:element name="DateOfBirth" type="xsd:date">
				<xsd:annotation>
					<xsd:documentation>format ddmmmyyyy or ddmmmyy</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Gender" type="GenderDOCS_Entry.PNRB">
				<xsd:annotation>
					<xsd:documentation>M = Male F = Female MI = Male traveling with an
						infant FI = Female traveling with an infant U =
						Unknown at the time
						of booking</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="DocumentExpirationDate"
				type="xsd:date">
				<xsd:annotation>
					<xsd:documentation>format ddmmmyyyy or ddmmmyy</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Surname" type="UpperCaseAlphaSpaceLength1to30">
				<xsd:annotation>
					<xsd:documentation>max 30 chars</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Forename" type="UpperCaseAlphaSpaceLength1to30">
				<xsd:annotation>
					<xsd:documentation>max 30 chars</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="MiddleName"
				type="UpperCaseAlphaSpaceLength1to30">
				<xsd:annotation>
					<xsd:documentation>max 30 chars</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="PrimaryHolder" type="xsd:boolean" />
			<xsd:element minOccurs="0" name="FreeText"
				type="UpperCaseStringLength1to216" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="type" type="stl:RequestType.PNRB">
			<xsd:annotation>
				<xsd:documentation>A = AFAX G = GFAX</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="EmailAddress.PNRB">
		<xsd:annotation>
			<xsd:documentation>* a max of 999 emails are allowed in a PNR * you
				cannot
				use an underscore character. if one is \ present it
				needs to be
				replaced by two = (e.g., ==). this can only
				be used before the @
				sign. * to enter an apostrophe
				change it to a / * max num of chars is
				63 in a PNR

				The email formats are:

				* add email address
				PE‡(email@address)‡

				PE‡ajtestcompany@test.com‡

				* add email address
				with name select

				PE‡(email@address)‡-(name
				#),(name #)
				PE‡ajtestcompany@test.com‡-1.1,2.1

				* add email address
				with additional
				data

				PE‡(email@address.com)‡(optional entries)
				PE‡ajtestcompany@test.com‡FR/CHAD KIRIBATI

				(there are several notes
				in format finder regarding this
				entry)

				* create a custom subj line for
				the email msg:

				5V‡SL-(free text) 5V‡SL-YOUR REVISED RESERVATION FOR
				18JUN

				NOTE: free text limited one line of 65 chars

				* include free text
				in email msg

				5V‡EM-(free text) 5V‡EM-JUANITA - PLEASE CALL ME AS SOON
				AS YOU GET THIS EMAIL.

				NOTE: can include 3 lines of free text, each
				line
				limited to 65 chars

				* modify passenger email info

				PE(line #)¤‡(new
				email info)‡ PE2¤‡john_smith@ibm.com‡

				NOTE: line # is opt if only one
				email address line

				* delete a single email address

				PE(line #)¤ PE1¤

				NOTE: line # is opt if only one email address line

				* delete multiple
				email addresses PE(line #),(line
				#),(line #)¤ PE1,3,4¤

				* delete
				multiple email address fields PE(line #)-(line
				#)¤ PE1-4¤</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Address" type="StringLength1to63">
				<xsd:annotation>
					<xsd:documentation>max 63 chars</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="OverrideFrom" type="StringLength1to63" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB">
			<xsd:annotation>
				<xsd:documentation>Unique identifier identifying a specific Email
					instance</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="EmailAddresses.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="999" name="EmailAddress" type="EmailAddress.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="EmailLine.PNRB">
		<xsd:sequence>
			<xsd:element name="Text" type="UpperCaseStringLength1to65" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="index" type="Numeric1to999" />
	</xsd:complexType>
	<xsd:complexType name="EmailLines.PNRB">
		<xsd:sequence>
			<xsd:element maxOccurs="3" name="EmailLine" type="EmailLine.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="EmergencyContactRequest.PNRB">
		<xsd:annotation>
			<xsd:documentation>Can be name associated.

				formats:

				* add emergency information (GFAX AND AFAX)
				4PCTC/(contact name)/(country code)(phone number)-(name
				number) 4PCTC/PIERRE BOUVIER/US 817 555 0000-1.1

				* add emergency information with free text (GFAX AND
				AFAX) 4PCTC/(contact name)/(country code) (phone
				number)/(free text) 
				4PCTC/MEIER THOMAS/DE 49 9131 45567/HOME

				* indicate that passenger has refused to provide
				emergency contact info (GFAX AND AFAX)

				4PCTC//</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="ContactName" type="UpperCaseStringLength1to35" />
			<xsd:element name="CountryCode" type="UpperCaseStringLength2" />
			<xsd:element name="PhoneNumber" type="UpperCaseStringLength1to20">
				<xsd:annotation>
					<xsd:documentation>must not contain dashes and must include the
						entire telephone number including area codes,
						etc...</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Comment" type="UpperCaseStringLength1to30" />
			<xsd:element name="PassengerRefusal" type="xsd:boolean" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="type" type="stl:RequestType.PNRB">
			<xsd:annotation>
				<xsd:documentation>A = AFAX G = GFAX</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="FormsOfPayment.PNRB">
		<xsd:annotation>
			<xsd:documentation>There should only be one form of payment. However,
				if
				there are more than one then the first one will be used
				by the
				host. The exception to that rule is if there is a
				credit card FOP
				present then it will be used no matter
				when it is entered.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0"
				name="CreditCardPayment" type="CreditCardPayment.PNRB" />
			<xsd:element minOccurs="0" name="CashPayment" type="Payment.PNRB" />
			<xsd:element minOccurs="0" name="CheckPayment" type="Payment.PNRB" />
			<xsd:element maxOccurs="unbounded" minOccurs="0"
				name="OtherPayment" type="OtherPayment.PNRB" />
			<xsd:element minOccurs="0" name="BNumberPayment" type="BNumberPayment.PNRB" />
			<xsd:element minOccurs="0" name="GTRPayment" type="GTRPayment.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="FrequentFlyer.PNRB">
		<xsd:complexContent>
			<xsd:extension base="Loyalty.PNRB">
				<xsd:sequence>
					<xsd:element minOccurs="0"
						name="TravelingCarrierCodes" type="TravelingCarrierCodes.PNRB" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
    	</xsd:complexType>
      <xsd:complexType name="Profiles.PNRB">
        <xsd:sequence>
          <xsd:element name="Profile" minOccurs="0" maxOccurs="unbounded">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="ProfileID" type="xsd:string" minOccurs="0">
                  <xsd:annotation>
                    <xsd:documentation>Profile ID</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element name="ProfileType" type="xsd:string" minOccurs="0">
                  <xsd:annotation>
                    <xsd:documentation>Profile Type like TVL, CRP eyc</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element name="AirlineCode" type="xsd:string" minOccurs="0">
                  <xsd:annotation>
                    <xsd:documentation>Profile Type like TVL, CRP eyc</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element name="FrequentFlyer" type="CustomerLoyalty" minOccurs="0" maxOccurs="unbounded" />
                <xsd:element name="ValueScore" type="CV_Score" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
    <xsd:complexType name="CV_Score">
    	<xsd:sequence>
  			<xsd:element name="Score" type="xsd:int"></xsd:element>
        	<xsd:element name="Type" type="ScoreType"></xsd:element>
        	<xsd:element minOccurs="0" name="EffectiveDate" type="xsd:date" />
  			<xsd:element minOccurs="0" name="DiscontinueDate" type="xsd:date" />
  			<xsd:element minOccurs="0" name="Comment" type="xsd:string">
  				<xsd:annotation>
  					<xsd:documentation>Limited to 500 chars</xsd:documentation>
  				</xsd:annotation>
  			</xsd:element>
  			<xsd:element minOccurs="0" name="UserId" type="xsd:string"></xsd:element>
  			<xsd:element minOccurs="0" name="LoadDateTime" type="xsd:dateTime"></xsd:element>
  		</xsd:sequence>
  	</xsd:complexType>
  <xsd:complexType name="CustomerLoyalty">
    <xsd:sequence>
      <xsd:element name="MembershipID" type="MembershipID" />
      <xsd:element name="LevelValue" type="xsd:string" />
      <xsd:element name="LevelType" type="MembershipLevelTypeCodes" />
      <xsd:element name="Vendor" type="xsd:string" />
      <xsd:element name="VendorType" type="TravelSectorType" />
    </xsd:sequence>
  </xsd:complexType>  
  <xsd:simpleType name="TravelSectorType">
    <xsd:annotation>
      <xsd:documentation>4/29/2009 - added GroundTransport to accomodate Profiles data. Other values from OTA Code List: travel sector (TVS).&#13;
</xsd:documentation>
      <xsd:documentation>Values from OTA Code List: travel sector (TVS).</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Air"/>
      <xsd:enumeration value="Car"/>
      <xsd:enumeration value="Hotel"/>
      <xsd:enumeration value="Insurance"/>
      <xsd:enumeration value="Golf"/>
      <xsd:enumeration value="Tour"/>
      <xsd:enumeration value="Rail"/>
      <xsd:enumeration value="Cruise"/>
      <xsd:enumeration value="Excursion"/>
      <xsd:enumeration value="Ferry"/>
      <xsd:enumeration value="GroundTransport"/>
    </xsd:restriction>
  </xsd:simpleType>  
  <xsd:simpleType name="MembershipLevelTypeCodes">
    <xsd:annotation>
      <xsd:documentation>The type of value in the membership level value. Possibilities include: 2L, 3L, Banner (BN), Tier Level Indicator (TI)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="2L"/>
      <xsd:enumeration value="3L"/>
      <xsd:enumeration value="BN"/>
      <xsd:enumeration value="TI"/>
    </xsd:restriction>
  </xsd:simpleType>  
  <xsd:simpleType name="MembershipID">
    <xsd:annotation>
      <xsd:documentation>Loyality or other association membership identifier.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>        
	<xsd:simpleType name="ScoreType">
		<xsd:annotation>
			<xsd:documentation>Type of the Score TDW - TDW, AL - Airline, MTO - Override, CE - Current Effective</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:NMTOKEN">
			<xsd:enumeration value="TDW"/>
			<xsd:enumeration value="AL"/>
			<xsd:enumeration value="MTO"/>
			<xsd:enumeration value="CE"/>
		</xsd:restriction>
	</xsd:simpleType>          
	<xsd:complexType name="FutureTicketing.PNRB">
		<xsd:annotation>
			<xsd:documentation>Ticket arrangement, today's date

				7TAW/

				Future ticketing date for Queue 9 placement date format
				(ddmmm) 7TAW(date)/

				7TAW26MAR

				* future ticketing date - queue 9 placement, branch
				7TAW(pseudo city code)(date)/

				7TAWB4T012APR/

				* place a PNR into a pre-assigned special queue for
				future ticketing 7TAW(pseudo city code)(previously
				assigned two-alpha characters agent sign)(date)/

				7TAWB4T0BB05MAY/

				* place a PNR into a pre-assigned special queue for
				current ticketing 7TAW(pseudo city code)(previously
				assigned two-alpha characters agent sign)/

				7TAWB4T0BB/

				* Request queue placement to a specific queue for future
				ticketing 7TAW(date)(queue number)

				7TAW23JUL55/

				* request queue placement to a specific queue with
				immediate queue placement 7TAW(queue number)

				7TAW142/

				* request queue placement to a specific queue at an
				authorized branch for future ticketing 7TAW(pseudo city
				code)(date)(queue number)/

				7TAWB4T023MAY55/

				* request queue placement to a specific queue at an
				authorized branch with immediate queue placement
				7TAW(pseudo city code)(date)(queue number)/

				7TAWB4T055/</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="Code" type="UpperCaseAlphaLength0to3" />
			<xsd:element minOccurs="0" name="CityCode" type="CityCode" />
			<xsd:element minOccurs="0" name="BranchPCC" type="UpperCaseStringLength4" />
			<xsd:element minOccurs="0" name="QueueCode" type="UpperCaseAlphaLength2" />
			<xsd:element minOccurs="0" name="Date" type="UpperCaseStringLength5" />
			<xsd:element minOccurs="0" name="QueueNumber" type="stl:QueueNumber.PNRB" />
			<xsd:element minOccurs="0" name="Comment"
				type="UpperCaseStringLength1to22" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="GTRPayment.PNRB">
		<xsd:complexContent>
			<xsd:extension base="Payment.PNRB">
				<xsd:sequence>
					<xsd:element name="Number" type="UpperCaseStringLength1to128">
						<xsd:annotation>
							<xsd:documentation>Government Travel Request number * max
								of 15 characters, if type = GTR</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GenericSpecialRequest.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="Code" type="UpperCaseStringLength4" />
			<xsd:element minOccurs="0" name="FreeText"
				type="UpperCaseStringLength1to70" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="type" type="stl:RequestType.PNRB">
			<xsd:annotation>
				<xsd:documentation>A = AFAX G = GFAX</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="msgType" type="stl:msgType.PNRB">
			<xsd:annotation>
				<xsd:documentation>S = SSR O = OSI</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="GenericSpecialRequests.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="GenericSpecialRequest"
				type="GenericSpecialRequest.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ItinerarySpecialRequests.PNRB">
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0"
				name="GenericSpecialRequest" type="GenericSpecialRequest.PNRB" />
			<xsd:element maxOccurs="unbounded" minOccurs="0"
				name="OTHSFOPMessage" type="OTHSFOPMessage.PNRB" />
			<xsd:element maxOccurs="unbounded" minOccurs="0"
				name="SeatRequest" type="SeatRequest.PNRB" />
			<xsd:element maxOccurs="unbounded" minOccurs="0"
				name="WheelchairRequest" type="WheelchairRequest.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Loyalty.PNRB">
		<xsd:annotation>
			<xsd:documentation>These are the formats for Frequent Flyer (FF)

				- add
				frequent flyer number

				FF(carrier code)(number)-(name number)
				FFUS87658768-2.1

				- add frequent flyer number using a specific
				passenger
				name

				FF(carrier code)(number)-(name)
				FFBA12345678-BRIAND/FREDERIC

				- add frequent flyer number on LAN
				airlines for new
				customer numbers in Argentina, Ecuador and Peru

				FF(carrier code LP)(number) FFLP34593001

				- delete a frequent flyer
				number

				FF(frequent flyer line number)¤ FF1¤

				- delete all frequent
				flyer numbers

				FF¤ALL

				- delete range of frequent flyer numbers

				FF(first
				FF line #)-(last FF line #)¤ FF1-4¤

				- delete specific FF numbers

				FF(FF line #),(FF line #)¤ FF1,3¤

				- modify FF info

				FF(line #)¤(carrier
				code)(FF #) FF1¤4UA5522123

				To add name number: FF1¤4UA5522123-3.1</xsd:documentation>
			<xsd:documentation>TODO - what is relationship to FrequentFlyer.PNRB. If different, then why is comment the same?</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="SupplierCode" type="UpperCaseStringLength1to10" />
			<xsd:element name="Number" type="UpperCaseStringLength1to20" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB">
			<xsd:annotation>
				<xsd:documentation>unique identifier identifying a specific
					FrequentFlyer instance</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="NameAssociatedSpecialRequests.PNRB">
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0"
				name="GenericSpecialRequest" type="GenericSpecialRequest.PNRB" />
			<xsd:element maxOccurs="unbounded" minOccurs="0"
				name="ChildRequest" type="ChildRequest.PNRB" />
			<xsd:element maxOccurs="unbounded" minOccurs="0"
				name="APISRequest" type="APISRequest.PNRB" />
			<xsd:element maxOccurs="unbounded" minOccurs="0"
				name="EmergencyContactRequest" type="EmergencyContactRequest.PNRB" />
			<xsd:element maxOccurs="unbounded" minOccurs="0"
				name="SpecialMealRequest" type="SpecialMealRequest.PNRB" />
			<xsd:element maxOccurs="unbounded" minOccurs="0"
				name="PassportInfoMessage" type="PassportInfoMessage.PNRB">
				<xsd:annotation>
					<xsd:documentation>name associated.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element maxOccurs="unbounded" minOccurs="0"
				name="SeatRequest" type="SeatRequest.PNRB" />
			<xsd:element maxOccurs="unbounded" minOccurs="0"
				name="UnaccompaniedMinorMessage" type="UnaccompaniedMinorMessage.PNRB" />
			<xsd:element maxOccurs="unbounded" minOccurs="0"
				name="WheelchairRequest" type="WheelchairRequest.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="OTHSFOPMessage.PNRB">
		<xsd:annotation>
			<xsd:documentation>3 command process:

				#1 - Send form of payment

				format 3OTHS(opt seg #)/(credit card code)/(credit card
				#)EXP (2 # exp month) (last 2 #'s exp year)
				3OTHS1/AX11428755558239001EXP 12 07

				#2 - send cardholder name as shown on the card

				format 3OTHS(opt seg #)/CH (card holder name) 3OTHS/CH
				ALLAN JACKSON

				#3 - send free text remarks that you have read contract
				of carriage information to passenger

				format 3OTHS(opt seg #)/(free text) 3OTHS/PAX AGREES TO
				OPERATOR PARTICIPANT CONTRACT</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="CreditCardCode" type="PaymentCardCode" />
			<xsd:element name="CreditCardNumber" type="PaymentCardNumber" />
			<xsd:element name="ExpirationMonth" type="NumericStringLength2" />
			<xsd:element name="ExpirationYear" type="NumericStringLength2" />
			<xsd:element name="CardHolderName" type="UpperCaseStringLength1to128"/>
			<xsd:element name="Comment" type="UpperCaseStringLength1to128"/>		
		</xsd:sequence>
		<xsd:attribute name="id" type="UpperCaseStringLength1to128" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="OtherPayment.PNRB">
		<xsd:complexContent>
			<xsd:extension base="Payment.PNRB">
				<xsd:sequence>
					<xsd:element name="PaymentInfo" type="UpperCaseStringLength1to128" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
<!--	<xsd:complexType name="PNRCreateReservationRQ">-->
<!--		<xsd:sequence>-->
<!--			<xsd:element name="POS" type="POS_Type.PNRB" />-->
<!--			<xsd:element name="Reservation" type="Reservation.PNRB" />-->
<!--			<xsd:element minOccurs="0" name="ReservationCompletionCritieria"-->
<!--				type="ReservationCompletionCriteria.PNRB" />-->
<!--		</xsd:sequence>-->
<!--	</xsd:complexType>-->
	<xsd:complexType name="PNRCreateReservationRS">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="Reservation" type="Reservation.PNRB" />
			<xsd:element minOccurs="0" name="POS" type="POS_Type.PNRB" />
			<xsd:element name="RecordLocator" type="UpperCaseAlphaLength6" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="PNRUpdateReservationRQ">
		<xsd:sequence>
			<xsd:element name="Reservation" type="Reservation.PNRB" />
			<xsd:element name="POS" type="POS_Type.PNRB" />
			<xsd:element name="ReservationEmail" type="ReservationEmail.PNRB" />
			<xsd:element name="RecordLocator" type="UpperCaseAlphaLength6" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="PNRUpdateReservationRS">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="Reservation" type="Reservation.PNRB" />
			<xsd:element minOccurs="0" name="POS" type="POS_Type.PNRB" />
			<xsd:element name="RecordLocator" type="UpperCaseAlphaLength6" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="POS_Type.PNRB">
		<xsd:annotation>
			<xsd:documentation>Point of Sale (POS) is the details identifying the party or connection channel making the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Source" type="SourceType.PNRB">
				<xsd:annotation>
					<xsd:documentation>This holds details regarding the requestor. It may be repeated to also accommodate the delivery systems.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Passenger.PNRB">
		<xsd:sequence>
			<xsd:element name="LastName" type="UpperCaseStringLength1to60" />
			<xsd:element name="FirstName" type="UpperCaseStringLength1to60" />
			<xsd:element minOccurs="0" name="Title"
				type="UpperCaseStringLength1to128" />
			<xsd:element maxOccurs="99" minOccurs="0" name="FrequentFlyer" type="FrequentFlyer.PNRB" />
			<xsd:element maxOccurs="99" minOccurs="0" name="EmailAddress"
				type="EmailAddress.PNRB" />
			<xsd:element minOccurs="0" name="Profiles" type="Profiles.PNRB"/>	
			<xsd:element minOccurs="0" name="SpecialRequests"
				type="NameAssociatedSpecialRequests.PNRB" />
			<xsd:element minOccurs="0" name="Seats" type="Seats.PNRB" />
			<xsd:element minOccurs="0" name="PreReservedSeats" type="PreReservedSeats.PNRB" />
			<xsd:element minOccurs="0" name="AccountingLines" type="AccountingLines.PNRB" />
			<xsd:element minOccurs="0" name="PassengerProfileID"
				type="xsd:string" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="nameType" type="PassengerType.PNRB">
			<xsd:annotation>
				<xsd:documentation>I = Infant, S = Standard</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="passengerType" type="UpperCaseStringLength3" />
		<xsd:attribute name="referenceNumber" type="UpperCaseStringLength1to6" />
		<xsd:attribute name="nameId" type="UpperCaseStringLength1to30" />
		<xsd:attribute name="withInfant" type="xsd:boolean" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="Seats.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="PreReservedSeats" type="PreReservedSeats.PNRB" />
			<xsd:element minOccurs="0" name="SeatSpecialRequests" type="SeatRequests.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="SeatRequests.PNRB">
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="SeatRequest"
				type="SeatRequest.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="PassengerReservation.PNRB">
		<xsd:sequence>
			<xsd:element name="Passengers" type="Passengers.PNRB" />
			<xsd:element name="Segments" type="SegmentType.PNRB" />
			<xsd:element minOccurs="0" name="FormsOfPayment" type="FormsOfPayment.PNRB" />
			<xsd:element name="TicketingInfo" type="TicketingInfo.PNRB" />
			<xsd:element name="ItineraryPricing" type="ItineraryPricing.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ItineraryPricing.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="99" name="FuturePriceInfo" type="FuturePriceInfo.PNRB" />
		</xsd:sequence>
		<xsd:attribute name="numberInParty" type="Numeric1to99" />
	</xsd:complexType>
	<xsd:complexType name="FuturePriceInfo.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="Text" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Passengers.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="Corporate" type="TravelerGroup.PNRB" />
			<xsd:element minOccurs="0" maxOccurs="99" name="Passenger" type="Passenger.PNRB" />
			<xsd:element minOccurs="0" maxOccurs="1" name="BlockedSpaceGroup" type="BSGGroup.PNRB" />
		</xsd:sequence>
		<xsd:attribute name="numberInParty" type="Numeric1to99" />
	</xsd:complexType>
	<xsd:complexType name="PassportInfoMessage.PNRB">
		<xsd:annotation>
			<xsd:documentation>limited to 57 chars

				optional fields are: passport number, country of issue,
				date of birth, name field, gender field, primary
				passport holder inidicator and name number</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="PassportNumber"
				type="UpperCaseStringLength1to25" />
			<xsd:element minOccurs="0" name="CountryOfIssue"
				type="UpperCaseAlphaLength2to3" />
			<xsd:element minOccurs="0" name="DateOfBirth" type="xsd:date">
				<xsd:annotation>
					<xsd:documentation>format ddmmmyy</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="LastName"
				type="UpperCaseStringLength1to35" />
			<xsd:element minOccurs="0" name="FirstName"
				type="UpperCaseStringLength1to35" />
			<xsd:element minOccurs="0" name="Gender" type="Gender.PNRB">
				<xsd:annotation>
					<xsd:documentation>F = Female M = Male U = Unknown</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="IncludedChild" type="xsd:boolean" />
			<xsd:element minOccurs="0" name="PrimaryHolder" type="xsd:boolean" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="PassportRemark.PNRB">
		<xsd:annotation>
			<xsd:documentation>* enter passport data in historical remarks

				5H-‡(passport issuing country)-(passport #)-(country
				code of
				citizenship)-(passenger name as it appears in
				passport, plus free
				text)
				5H-‡US-D123456-US-GREEN/ROBERT W.

				NOTE: only for AA

				* enter data
				for military personnel with pink or
				green
				ID card

				5H-‡(country issuing
				military orders)-(card
				#)-(citizenship)-(passenger's full name)-(area
				order
				number or order
				number)
				5H-‡FR-999999-FR-DUPONT/VALERIE-5577

				NOTE: only for AA</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="IssuingCountry" type="UpperCaseStringLength2" />
			<xsd:element name="Citizenship" type="UpperCaseStringLength2" />
			<xsd:element minOccurs="0" name="PassengerName"
				type="UpperCaseStringLength1to35" />
			<xsd:element name="DocumentNumber" type="UpperCaseStringLength1to20" />
			<xsd:element minOccurs="0" name="Comment"
				type="UpperCaseStringLength1to30" />
			<xsd:element minOccurs="0" name="OrderNumber"
				type="UpperCaseStringLength1to10" />
		</xsd:sequence>
		<xsd:attribute name="index" type="Numeric1to999" />
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="Payment.PNRB">
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="PhoneNumber.PNRB">
		<xsd:annotation>
			<xsd:documentation>each phone field can have up to 62 chars

				The
				formats for phone numbers are:

				* add phone contact

				9(area code)(phone
				number)-(code)
				9212-123-1234-A

				* insert phone field as a specific line

				9(line # to insert at)/(area
				code)-(prefix)-(number)-(phone location)

				* insert phone field and
				make it the first number in the
				field

				90/(area
				code)-(prefix)-(number)-(phone location)
				90/202-675-6543-A

				*
				add phone
				contact and include city code that is
				outside of your area

				9/(city
				code)(area code)(phone number)-(code)
				9/BOS616-123-1234-A

				*
				change
				phone field to new number

				9(line #)¤(area
				code)-(prefix)-(number)-(phone location)
				92¤415-991-0220-A

				* change
				city code in phone field

				9(line #)¤(new city code) 92¤LON

				* delete
				specific line number in the phone field

				9(line #)¤ 92¤

				* delete a
				range of phone fields

				9(first line # in range)-(last line # in
				range)¤ 92-3¤</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="Location" type="stl:PhoneLocationType.PNRB">
				<xsd:annotation>
					<xsd:documentation>A = Agency, H = Home, B = Business, C = Cell, M
						= Mobile, F = Fax, HTL = Hotel</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="CityCode" type="UpperCaseStringLength3" />
			<xsd:element minOccurs="0" name="Extension" type="NumericStringLength1to5">
				<xsd:annotation>
					<xsd:documentation>max 5 chars</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Number" type="UpperCaseStringLength1to62" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="PhoneNumbers.PNRB">
		<xsd:sequence>
			<xsd:element maxOccurs="99" name="PhoneNumber" type="PhoneNumber.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="PreReservedSeat.PNRB">
		<xsd:sequence>
			<xsd:element name="SeatNumber" type="UpperCaseStringLength1to10" />
			<xsd:element name="SmokingPrefOfferedIndicator" type="xsd:boolean" />
			<xsd:element name="SeatTypeCode" type="UpperCaseStringLength1to10" />
			<xsd:element name="BoardingPassIssueFlag" type="xsd:boolean" />
			<xsd:element name="SeatStatusCode" type="UpperCaseStringLength1to7" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="PreReservedSeats.PNRB">
		<xsd:sequence>
			<xsd:element maxOccurs="999" minOccurs="0" name="PreReservedSeat"
				type="PreReservedSeat.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="QueueRemark.PNRB">
		<xsd:annotation>
			<xsd:documentation>* add future queue placement in remarks field

				5Q-(PCC)(queue #)/(prefatory instruction number)
				5Q-B4T03AUG55/11

				NOTE: max of 14 5Q- entries in one PNR. Cannot enter
				remarks
				beginning with 5QQ.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="PseudoCityCode" type="UpperCaseStringLength3" />
			<xsd:element name="QueueNumber" type="Numeric1to99" />
			<xsd:element name="FutureDate" type="xsd:date" />
			<xsd:element minOccurs="0" name="InstructionNumber" type="Numeric1to999">
				<xsd:annotation>
					<xsd:documentation>prefatory instruction number</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="index" type="Numeric1to999" />
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="ReceivedFrom.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="Name"
				type="UpperCaseStringLength1to71" />
			<xsd:element minOccurs="0" name="AgentName"
				type="UpperCaseStringLength1to20" />
			<xsd:element minOccurs="0" name="TourWholesalerPCC" type="UpperCaseStringLength4" />
			<xsd:element minOccurs="0" name="NewControllingPCC" type="UpperCaseStringLength4" />
		</xsd:sequence>
		<xsd:attribute name="fromPassenger" type="xsd:boolean" />
	</xsd:complexType>
	<xsd:complexType name="Remark.PNRB">
		<xsd:annotation>
			<xsd:documentation>Each remark line can contain a max of 70 chars

				The
				entire remarks field can contain a max of 32,767
				chars.

				Remarks
				formats:

				* add remark

				5(free text) 5JASON AGE 6YRS

				* add more than one
				line of remark in one entry

				5(free text)§5(free text) 5CHECK
				PASSPORTS§5CHECK
				ADDRESS FIELD

				* add historical remarks to store info
				in history

				5H-(free text) 5H-FARE QUOTED 690.00

				* enter alpha coded
				remarks

				5(letter)‡(free text) 5H‡HOTEL NEEDED IN SWITZERLAND

				5C‡CALL
				AND MAKE CAR RESERVATIONS ON DEC 23

				* add corporate identification
				number

				5C-CORP(corporate #) 5C-CORPD14569812

				* enter hidden remark

				5HR-(free text) 5HR-XYZ CORP PSGRS RECIEVE FOLLOWING
				DISCOUNTS 5HR-25
				PERCENT OFF ALL CAR RENTALS

				NOTE: max 70 chars after the 5. Total
				size of complete
				remarks field in any PNR is 32.762. To enter
				multiple
				lines use the §

				* modify basic remark

				5(line #)¤(new text)
				59¤YOU MUST BRING YOUR PHOTO ID

				* modify an invoice remark

				5(line
				#)¤.(new text) 52¤.THANKS

				* modify an itinerary remark

				5(line #)¤‡(new
				text) 59¤‡HAVE A GOOD TRIP

				* delete remarks

				5(line #)¤ 53¤

				*delete a
				range of remarks lines

				5(line #)-(line #)¤ 59-12¤

				* delete specific
				remarks lines

				5(line #),(line #)¤ 59,12¤

				NOTE: When you delete
				specific remarks lines, you can
				delete a max of 5 per entry.

				* insert
				a new remark after specified remarks line

				5(line # new text is to
				follow)/(free text) 52/PLEASE
				ALLOW EXTRA TIME DUE TO AIRPORT
				CONSTRUCTION

				* insert a new remark as the first remark in a PNR

				50/(free text) 50/HAVE ADVISED ALL DOCS

				* move and insert specific
				remarks

				5(remark line you want to insert after)//(remark line to
				be
				moved),(remark line to be moved) 57//10,2

				NOTE: the above moves
				remarks 10 and 2 and inserts them
				after remark 7

				* move and insert a
				range of remarks

				5(remark line you want to insert after)//(range of
				remarks) 57//3-5

				* combine a range of remarks and specific remarks
				lines

				5(remark line you want to insert after)//(range of
				remarks),(specific remark line) 57//3-5,9

				* reverse order of remarks
				- example from 1 through 10

				50//(remark lines in descending order)
				50//10,9,8,7,6,5,4,3,2,1</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="RemarkLines" type="RemarkLines.PNRB" />
		</xsd:sequence>
		<xsd:attribute name="index" type="Numeric1to999" />
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="type" type="stl:RemarkType.PNRB">
			<xsd:annotation>
				<xsd:documentation>HS = Historical HD = Hidden REG = normal remark</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="RemarkLine.PNRB">
		<xsd:sequence>
			<xsd:element name="Text" type="UpperCaseStringLength1to70" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="index" type="Numeric1to999" />
	</xsd:complexType>
	<xsd:complexType name="RemarkLines.PNRB">
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" name="RemarkLine"
				type="RemarkLine.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Remarks.PNRB">
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="Remark"
				type="Remark.PNRB" />
			<xsd:element maxOccurs="unbounded" minOccurs="0"
				name="SymbolCodedRemark" type="SymbolCodedRemark.PNRB" />
			<xsd:element maxOccurs="unbounded" minOccurs="0"
				name="PassportRemark" type="PassportRemark.PNRB" />
			<xsd:element maxOccurs="8" minOccurs="0" name="QueueRemark"
				type="QueueRemark.PNRB" />
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="Email"
				type="ReservationEmail.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="RequestorID.PNRB">
		<xsd:complexContent>
			<xsd:extension base="UniqueID_Type.PNRB">
				<xsd:attribute name="MessagePassword" type="StringLength1to16">
					<xsd:annotation>
						<xsd:documentation>This password
										provides an additional level of security that the recipient can
										use to validate the sending party's authority to use the
										message.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="BookingDetails.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="RecordLocator" type="UpperCaseAlphaLength6" />
			<xsd:element minOccurs="0" name="CreationTimestamp" type="xsd:dateTime" />
			<xsd:element minOccurs="0" name="CreationAgentID" type="StringLength0to16" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DKNumbers.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="99" name="DKNumber" type="UpperCaseAlphaSpaceLength1to30" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="CorporateIDs.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="99" name="CorporateID" type="CorporateID.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="CorporateID.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="Number" type="StringLength1to32" />
			<xsd:element minOccurs="0" name="Name" type="StringLength1to32" />
			<xsd:element minOccurs="0" name="PrimeHost" type="StringLength1to32" />
			<xsd:element minOccurs="0" name="Prefix" type="StringLength1to32" />
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="Reservation.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="BookingDetails" type="BookingDetails.PNRB"/>
			<xsd:group ref="ReservationChoiceGroup" />
            <xsd:element name="ReservationValueScore" type="CV_Score" minOccurs="0" maxOccurs="1" />
			<xsd:element minOccurs="0" name="DKNumbers"
				type="DKNumbers.PNRB" />
			<xsd:element minOccurs="0" name="CorporatedIDs"
				type="CorporateIDs.PNRB" />
			<xsd:element minOccurs="0" name="ReceivedFrom" type="ReceivedFrom.PNRB" />
			<xsd:element minOccurs="0" name="Addresses" type="Addresses.PNRB" />
			<xsd:element name="PhoneNumbers" type="PhoneNumbers.PNRB" />
			<xsd:element minOccurs="0" name="Remarks" type="Remarks.PNRB" />
			<xsd:element minOccurs="0" name="EmailAddresses" type="EmailAddresses.PNRB" />
			<xsd:element minOccurs="0" name="AccountingLines" type="AccountingLines.PNRB" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="GenericSpecialRequests"
				type="GenericSpecialRequest.PNRB" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ReservationCompletionCriteria.PNRB">
		<xsd:sequence>
			<xsd:element name="SendEmail" type="SendEmail.PNRB" />
			<xsd:element name="Transaction" type="Transaction.PNRB" />
		</xsd:sequence>
		<xsd:attribute name="returnReservation" type="xsd:boolean" />
	</xsd:complexType>
	<xsd:complexType name="ReservationEmail.PNRB">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="EmailText" type="EmailLines.PNRB" />
			<xsd:element minOccurs="0" name="Subject"
				type="UpperCaseStringLength1to65">
				<xsd:annotation>
					<xsd:documentation>can be up to 65 chars</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="PseudoEmailAddress"
				type="StringLength1to63">
				<xsd:annotation>
					<xsd:documentation>this field contains only the info to the left of
						the @. This generates a pseudo email address for
						use on the Sabre Virtually There website by
						those travelers that do not want to provide
						their real address.

						max of 63 chars

						You cannot use the _ char. If there is an _ char
						to the left of the @ then you need to replace
						that with two = (i.e., ==) The extra = counts as
						a char towards the max # of chars

						Use a / in place of a '</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="highPriority" type="xsd:boolean" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="SeatRequest.PNRB">
		<xsd:annotation>
			<xsd:documentation>name associated.

				formats (AFAX and GFAX for all)

				* request seat assignment

				4(seat code)(seg #)-(name #) 
				4NSST1-2.1

				* request seats for all segments for multiple name
				fields 4(seat code)(seg #)-(name #),(name #)
				4NSST1-1.1,2.0

				* request seats for specified segment for specified name
				number and add free text

				4(seat code)(seg #)/(free text)-(name number)
				4SMST4/WDW-2.1

				* request seats for specified segment for multiple
				specified name numbers and add free text

				4(seat code)(seg #)/(free text)-(name #),(name#)
				4NSST2/AISLE-1.1,2.0</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="SeatCode" type="UpperCaseStringLength4"/>
			<xsd:element minOccurs="0" name="FlightNumber" type="StringLength0to4" />
			<xsd:element minOccurs="0" name="VendorCode" type="UpperCaseStringLength2" />
			<xsd:element minOccurs="0" name="FlightDate" type="UpperCaseStringLength1to10" />
			<xsd:element minOccurs="0" name="BoardCity" type="CityCode" />
			<xsd:element minOccurs="0" name="OffCity" type="CityCode" />
			<xsd:element minOccurs="0" name="Comment"
				type="UpperCaseStringLength1to30" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="type" type="stl:RequestType.PNRB">
			<xsd:annotation>
				<xsd:documentation>A = AFAX G = GFAX</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="Segments.PNRB">
		<xsd:annotation>
			<xsd:documentation>When non-air segments are defined they will be added to
				this sequence.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group maxOccurs="99" minOccurs="0" ref="Segment.PNRB" />
		</xsd:sequence>
		<xsd:attribute name="addARNKS" type="xsd:boolean" />
	</xsd:complexType>
	<xsd:complexType name="SendEmail.PNRB">
		<xsd:attribute name="sendEmail" type="xsd:boolean" />
		<xsd:attribute name="sendETicket" type="xsd:boolean" />
		<xsd:attribute name="sendItinerary" type="xsd:boolean" />
		<xsd:attribute name="sendEInvoice" type="xsd:boolean" />
	</xsd:complexType>
	<xsd:complexType name="SourceType.PNRB">
		<xsd:annotation>
			<xsd:documentation>Provides information on the source of a request. This is from the OTA xsd.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="RequestorID" type="RequestorID.PNRB">
				<xsd:annotation>
					<xsd:documentation>An identifier of the
						entity making the request (e.g. ATA/IATA/ID number, Electronic
						Reservation Service Provider (ERSP), Association of British Travel
						Agents (ABTA)).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="BookingChannel" type="BookingChannel.PNRB">
				<xsd:annotation>
					<xsd:documentation>Specifies the
						booking channel type and whether it is the primary means of
						connectivity of the source.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="AgentSine" type="StringLength0to16">
			<xsd:annotation>
				<xsd:documentation>Identifies
					the party within the requesting entity.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="PseudoCityCode" type="StringLength0to16">
			<xsd:annotation>
				<xsd:documentation>An identification
					code assigned to an office/agency by a reservation system.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="ISOCountry" type="CountryCode">
			<xsd:annotation>
				<xsd:documentation>The country code of
					the requesting party.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="ISOCurrency" type="AlphaLength3" />
		<xsd:attribute name="AgentDutyCode" type="StringLength0to16">
			<xsd:annotation>
				<xsd:documentation>An authority code
					assigned to a requestor.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="AirlineVendorID" type="AirlineCode">
			<xsd:annotation>
				<xsd:documentation>The IATA assigned
					airline code.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="AirportCode" type="AirportCode">
			<xsd:annotation>
				<xsd:documentation>The IATA assigned
					airport code.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="FirstDepartPoint" type="StringLength3">
			<xsd:annotation>
				<xsd:documentation>The point of first departure in a trip.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="SourceSystem" type="StringLength1to16">
			<xsd:annotation>
				<xsd:documentation>e.g., CSS, CSI</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="TerminalID" type="StringLength1to32">
			<xsd:annotation>
				<xsd:documentation>This is the
					electronic address of the device from which information is entered.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="SpecialMealRequest.PNRB">
		<xsd:annotation>
			<xsd:documentation>formats:

				* enter SSR special meal request (AFAX and
				GFAX)

				4SFML1-3.1

				* enter SSR special meal for baby infant 4(special
				meal
				type)(segment number)-(name number of accompanying
				adult)
				4BBML1-3.1

				* enter SSR speical meal request for all segments
				4(special meal
				type)A-(name number)
				4VGMLA-1.0</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="MealType" type="UpperCaseStringLength4">
				<xsd:annotation>
					<xsd:documentation>Needs a list associated with it.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="FlightNumber" type="FlightNumber" />
			<xsd:element minOccurs="0" name="VendorCode" type="UpperCaseStringLength2" />
			<xsd:element minOccurs="0" name="FlightDate" type="UpperCaseStringLength1to10" />
			<xsd:element minOccurs="0" name="BoardCity" type="CityCode" />
			<xsd:element minOccurs="0" name="OffCity" type="CityCode" />
			<xsd:element minOccurs="0" name="Comment"
				type="UpperCaseStringLength1to34" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="type" type="stl:RequestType.PNRB">
			<xsd:annotation>
				<xsd:documentation>A = AFAX G = GFAX</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="StatefulTransaction.PNRB">
		<xsd:attribute name="save" type="stl:Save.PNRB" />
		<xsd:attribute name="onFail" type="OnFail.PNRB" />
	</xsd:complexType>
	<xsd:complexType name="StatelessTransaction.PNRB">
		<xsd:attribute name="save" type="stl:Save.PNRB" />
	</xsd:complexType>
	<xsd:complexType name="SymbolCodedRemark.PNRB">
		<xsd:annotation>
			<xsd:documentation>* enter remark to print on itinerary form

				5‡(free
				text)
				5‡ARRIVE AT AIRPORT EARLY CONSTRUCTION

				* enter remark to print
				on invoice
				form

				5.(free text)
				5.RATE IS BASED ON SATURDAY NIGHT STAY

				*
				enter remark to print in form of
				payment box on the
				ticket

				5-(free
				text) 5-AGENCY CHECK

				* enter remark
				to print on ticket under name
				field for
				reference

				5*(free text)
				5*MUST TRAVEL WITH JUAREZ/J</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="RemarkLines" type="RemarkLines.PNRB" />
			<xsd:element minOccurs="0" name="Print" type="stl:RemarkPrintCode.PNRB">
				<xsd:annotation>
					<xsd:documentation>ITIN = remark is printed on itinerary form 
INV =	remark is printed 
PAY = remark is printed in payment box on the ticket 
NAME = remark is printed under name field</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="index" type="Numeric1to999" />
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="TicketingInfo.PNRB">
		<xsd:annotation>
			<xsd:documentation>Ticketing information must be entered before the PNR can be finalized.
		
				The ticketing field (7) has a maximum of 71 characters starting with the 
				7, regardless of the entry or character combination used.</xsd:documentation>
		</xsd:annotation>
		<!--<xsd:choice>-->
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="FutureTicketing" type="FutureTicketing.PNRB" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="TicketingTimeLimit"
				type="TicketingTimeLimit.PNRB" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="TourTicketing" type="TourTicketing.PNRB" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="AlreadyTicketed" type="AlreadyTicketed.PNRB" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="ETicketNumber" type="xsd:string" />
		</xsd:sequence>
		<!--</xsd:choice>-->
	</xsd:complexType>
	<xsd:complexType name="TicketingTimeLimit.PNRB">
		<xsd:annotation>
			<xsd:documentation>* add ticketing time limit for future date and specify a
				downline city 8(downline city)-(carrier
				code)(time)(future date)

				8SEA-DL6P/17MAY

				* add ticketing time limit for today's date 8(downline
				city)-(carrier code)(time)

				8LON-BA6P

				* add ticketing time limit for American Airlines, assume
				today's date 8(time)

				84P

				* add ticketing time limit for American Airlines,
				specify date 8(time)(date)

				87P/09NOV

				* add ticketing time limit for American Airlines,
				indicate 30 minute time limit 830</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="DownlineCity" type="UpperCaseStringLength3" />
			<xsd:element minOccurs="0" name="CarrierCode" type="AirlineCode" />
			<xsd:element minOccurs="0" name="Time"
				type="UpperCaseStringLength2to5" />
			<xsd:element minOccurs="0" name="FutureDate" type="UpperCaseStringLength5" />
			<xsd:element minOccurs="0" name="ThirtyMinuteInterval"
				type="xsd:string" />
			<xsd:element minOccurs="0" name="Comment" type="UpperCaseStringLength1to22" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="TourTicketing.PNRB">
		<xsd:annotation>
			<xsd:documentation>* add tour ticketing field 7TAV(tour operator
				code)/TAW(queue place date)(optional queue number)

				7TAVG0/TAW15APR101

				* add tour ticketing field and queue place to a branch
				office and add free text 7TAV(tour operator
				code)/TAW(Branch office pseudo city code)(queue place
				date) (branch office optional queue number)/(tour
				ticketing advice free text)

				7TAVXX/TAWB4T001JUN101/FINAL PAYMENT DUE</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="TourOperatorCode" type="UpperCaseStringLength2" />
			<xsd:element minOccurs="0" name="QueuePlaceDate" type="UpperCaseStringLength5" />
			<xsd:element minOccurs="0" name="QueueNumber" type="NumericStringLength2to3" />
			<xsd:element minOccurs="0" name="BranchPCC" type="UpperCaseStringLength4" />
			<xsd:element minOccurs="0" name="Comment"
				type="UpperCaseStringLength1to22" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="Transaction.PNRB">
		<xsd:choice>
			<xsd:element name="StatelessTransaction" type="StatelessTransaction.PNRB" />
			<xsd:element name="StatefulTransaction" type="StatefulTransaction.PNRB" />
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="TravelerGroup.PNRB">
		<xsd:sequence>
			<xsd:element name="Name" type="UpperCaseStringLength1to60" />
			<xsd:element name="NumInGroup" type="Numeric1to99" />
			<xsd:element name="NumberOfSeatsRemaining" type="Numeric0to99" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="nameId" type="xsd:string" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="BSGGroup.PNRB">
		<xsd:sequence>
			<xsd:element name="Name" type="UpperCaseStringLength1to60" />
			<xsd:element minOccurs="0" name="AssociatedReferenceInformation" type="BSGAssociatedReferenceInformation" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="TravelingCarrierCodes.PNRB">
		<xsd:sequence>
			<xsd:element maxOccurs="4" name="TravelingCarrierCode"
				type="UpperCaseStringLength2" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="UnaccompaniedMinorMessage.PNRB">
		<xsd:annotation>
			<xsd:documentation>name associated.

				format (both AFAX and GFAX)

				4UMNR/(seg #)/UM (age in two digits)-(name #) 
				4UMNR1/UM 08-1.1</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Age" type="Age.PNRB">
				<xsd:annotation>
					<xsd:documentation>age in two digits. add leading zero if
						necessary.</xsd:documentation>
				</xsd:annotation>	
			</xsd:element>
			<xsd:element minOccurs="0" name="FlightNumber" type="FlightNumber" />
			<xsd:element minOccurs="0" name="VendorCode" type="UpperCaseStringLength2" />
			<xsd:element minOccurs="0" name="FlightDate" type="UpperCaseStringLength1to10" />
			<xsd:element minOccurs="0" name="BoardCity" type="CityCode" />
			<xsd:element minOccurs="0" name="OffCity" type="CityCode" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="type" type="stl:RequestType.PNRB">
			<xsd:annotation>
				<xsd:documentation>A = AFAX G = GFAX</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="UniqueID_Type.PNRB">
		<xsd:annotation>
			<xsd:documentation>An identifier used to
				uniquely reference an object in a system (e.g. an airline
				reservation reference, customer profile reference, booking
				confirmation number, or a reference to a previous availability
				quote).</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="CompanyName" type="CompanyNameType">
				<xsd:annotation>
					<xsd:documentation>Identifies
						the company that is associated with the UniqueID.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attributeGroup ref="UniqueID_Group" />
	</xsd:complexType>
	<xsd:complexType name="WheelchairRequest.PNRB">
		<xsd:annotation>
			<xsd:documentation>can be name associated.

				formats (both AFAX and GFAX)

				* request wheelchair, all segments 4(Wheelchair code)
				4WCHR

				* request wheelchair, specific name, all segments
				4(Wheelchair code)-(name number) 4WCHR-1.2

				* request wheelchair, specific segment and name
				4(Wheelchair code)(segment #)-(name num) 4WCHR3-1.2

				* request wheelchair, specific city 4(Wheelchair
				code)(seg #)/(city code) 4WCHR3/MIA

				* request wheelchair, specific city and name
				4(Wheelchair code)(segment #)/(city code)-(name #)
				4WCHR3/MIA-1.2</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="WheelchairCode" type="stl:WheelchairCode.PNRB" />
			<xsd:element minOccurs="0" name="CityCode" type="xsd:string" />
			<xsd:element minOccurs="0" name="FlightNumber" type="FlightNumber" />
			<xsd:element minOccurs="0" name="VendorCode" type="UpperCaseStringLength2" />
			<xsd:element minOccurs="0" name="FlightDate" type="UpperCaseStringLength1to10" />
			<xsd:element minOccurs="0" name="BoardCity" type="CityCode" />
			<xsd:element minOccurs="0" name="OffCity" type="CityCode" />
		</xsd:sequence>
		<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
		<xsd:attribute name="type" type="stl:RequestType.PNRB">
			<xsd:annotation>
				<xsd:documentation>A = AFAX G = GFAX</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="op" type="OperationType.PNRB">
			<xsd:annotation>
				<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:simpleType name="Age.PNRB">
		<xsd:restriction base="xsd:int">
			<xsd:minExclusive value="0" />
			<xsd:maxExclusive value="99" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="AgentSine">
		<xsd:annotation>
			<xsd:documentation>Identifies a specific party within a POS entity.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="StringLength0to16" />
	</xsd:simpleType>
	<xsd:simpleType name="AirSegmentType.PNRB">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="REG" />
			<xsd:enumeration value="ARNK" />
			<xsd:enumeration value="OPEN" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="AirlineCode">
		<xsd:annotation>
			<xsd:documentation>Preferred format for airline codes. Structure is 2 upper case alpha-numeric characters followed by an optional uppercase letter.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[A-Z0-9]{2}[A-Z]?" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="AirlineCode.2to4Char">
		<xsd:annotation>
			<xsd:documentation>2 to 4 character code for an airline. Note: OTA uses a 3 character field.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="StringLength2to4" />
	</xsd:simpleType>
	<xsd:simpleType name="AirportCode">
		<xsd:restriction base="UpperCaseAlphaNumericLength3to5" />
	</xsd:simpleType>
	<xsd:simpleType name="AlphaLength3">
		<xsd:annotation>
			<xsd:documentation>Used for an Alpha String, length exactly 3.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[a-zA-Z]{3}" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="CityCode">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[a-zA-Z]{3}" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="CountryCode">
		<xsd:annotation>
			<xsd:documentation>Specifies a 2 character country code as defined in ISO3166.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[a-zA-Z]{2}" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DayOfWeek">
		<xsd:annotation>
			<xsd:documentation>A three letter abbreviation for the days of the week (e.g. may be the starting day for the availability requested, days of operation, rate effective day, etc.).</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:NMTOKEN">
			<xsd:enumeration value="Mon" />
			<xsd:enumeration value="Tue" />
			<xsd:enumeration value="Wed" />
			<xsd:enumeration value="Thu" />
			<xsd:enumeration value="Fri" />
			<xsd:enumeration value="Sat" />
			<xsd:enumeration value="Sun" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DocumentType.PNRB">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="A" />
			<xsd:enumeration value="C" />
			<xsd:enumeration value="P" />
			<xsd:enumeration value="T" />
			<xsd:enumeration value="F" />
			<xsd:enumeration value="M" />
			<xsd:enumeration value="N" />
			<xsd:enumeration value="V" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="FlightNumber">
		<xsd:annotation>
			<xsd:documentation>Identifies a flight number (1 to 4 numbers followed by optional uppercase A - Z, which specifies an operational suffix. Value may also be the enumerated or OPEN or ARNK. ARNK means Arrival Unknown. An OPEN air segment indicates the cities in the flight and the class of service for ticketing purposes but no flight number.
Leading zeros (0) are ignored. Note, Iberia uses leading 0 in flight numbers (ex: 0900 is different than 900).</xsd:documentation>
		</xsd:annotation>
		<xsd:union memberTypes="_flightNumberPattern _flightNumberLiterals" />
	</xsd:simpleType>
	<xsd:simpleType name="Gender.PNRB">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="F" />
			<xsd:enumeration value="M" />
			<xsd:enumeration value="U" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="GenderDOCS_Entry.PNRB">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="M" />
			<xsd:enumeration value="F" />
			<xsd:enumeration value="MI" />
			<xsd:enumeration value="FI" />
			<xsd:enumeration value="U" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Numeric0to99">
		<xsd:annotation>
			<xsd:documentation>Used for Numeric values, from 0 to 99 inclusive.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:integer">
			<xsd:minInclusive value="0" />
			<xsd:maxInclusive value="99" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Numeric1to99">
		<xsd:annotation>
			<xsd:documentation>Used for Numeric values, from 1 to 99 inclusive.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:integer">
			<xsd:minInclusive value="1" />
			<xsd:maxInclusive value="99" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Numeric1to999">
		<xsd:annotation>
			<xsd:documentation>Used for Numeric values, from 1 to 999 inclusive.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:integer">
			<xsd:minInclusive value="1" />
			<xsd:maxInclusive value="999" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Numeric1to9999">
		<xsd:annotation>
			<xsd:documentation>Used for Numeric values, from 1 to 9999 inclusive.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:integer">
			<xsd:minInclusive value="1" />
			<xsd:maxInclusive value="9999" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NumericStringLength1">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{1}" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NumericStringLength1to10">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{1,10}" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NumericStringLength1to13">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{1,13}" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NumericStringLength1to19">
		<xsd:annotation>
			<xsd:documentation>Used for Numeric Strings, length 1 to 19.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{1,19}" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NumericStringLength1to2">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{1,2}" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NumericStringLength1to20">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{1,20}" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NumericStringLength1to4">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{1,4}" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NumericStringLength1to5">
		<xsd:annotation>
			<xsd:documentation>Used for Numeric Strings, length 1 to 5.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{1,5}" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NumericStringLength1to7">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{1,7}" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NumericStringLength2">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{2}" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NumericStringLength2to3">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{2,3}" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NumericStringLength3to4">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{3,4}" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="OTA_CodeType">
		<xsd:annotation>
			<xsd:documentation>Used for codes in the OTA code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9A-Z]{1,3}(\.[A-Z]{3}(\.X){0,1}){0,1}" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="OnFail.PNRB">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="UPDATE_SESSION" />
			<xsd:enumeration value="UPDATE_AND_FILE" />
			<xsd:enumeration value="REJECT_ALL_UPDATES" />
			<xsd:enumeration value="UPDATE_SESSION_REJECT_FILE_REQUEST" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="OperationType.PNRB">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="C" />
			<xsd:enumeration value="U" />
			<xsd:enumeration value="D" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="PassengerType.PNRB">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="I" />
			<xsd:enumeration value="S" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="PaymentCardCode">
		<xsd:annotation>
			<xsd:documentation>The 2 digit code that identifies the credit card.</xsd:documentation>
		</xsd:annotation>
		<xsd:union memberTypes="_PaymentCardType _PaymentCardType_Other" />
	</xsd:simpleType>
	<xsd:simpleType name="PaymentCardNumber">
		<xsd:restriction base="NumericStringLength1to19" />
	</xsd:simpleType>
	<xsd:simpleType name="PseudoCityCode">
		<xsd:annotation>
			<xsd:documentation>An identification code assigned to an office/agency by a reservation system.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="StringLength0to16" />
	</xsd:simpleType>
	<xsd:simpleType name="StringLength0to128">
		<xsd:annotation>
			<xsd:documentation>Used for Character Strings, length 0 to 128.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="0" />
			<xsd:maxLength value="128" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="StringLength0to16">
		<xsd:annotation>
			<xsd:documentation>Used for Character Strings, length 1 to 16.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="0" />
			<xsd:maxLength value="16" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="StringLength1to16">
		<xsd:annotation>
			<xsd:documentation>Used for Character Strings, length 1 to 16.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="1" />
			<xsd:maxLength value="16" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="StringLength1to32">
		<xsd:annotation>
			<xsd:documentation>Used for Character Strings, length 1 to 32.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="1" />
			<xsd:maxLength value="32" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="StringLength1to63">
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="1" />
			<xsd:maxLength value="63" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="StringLength2to4">
		<xsd:annotation>
			<xsd:documentation>Used for Strings, length exactly 3.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="2" />
			<xsd:maxLength value="4" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="StringLength3">
		<xsd:annotation>
			<xsd:documentation>Used for Strings, length exactly 3.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="3" />
			<xsd:maxLength value="3" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseAlpha">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[A-Z]+" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseAlphaLength1to2">
		<xsd:annotation>
			<xsd:documentation>Used for an Alpha String, length 1 to 2 (for letter codes).</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[A-Z]{1,2}" />
		</xsd:restriction>
	</xsd:simpleType>
		<xsd:simpleType name="UpperCaseAlphaLength0to3">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[A-Z0-9]{0,3}" />
			<xsd:minLength value="0" />
			<xsd:maxLength value="3" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseAlphaLength2">
		<xsd:restriction base="xsd:string">
			<xsd:length value="2" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseAlphaLength2to3">
		<xsd:restriction base="UpperCaseAlpha">
			<xsd:minLength value="2" />
			<xsd:maxLength value="3" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseAlphaLength6">
		<xsd:restriction base="UpperCaseAlpha">
			<xsd:length value="6" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseAlphaNumericLength3to5">
		<xsd:annotation>
			<xsd:documentation>Used for an Upper Alpha String and Numeric, length 3 to 5.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[A-Z0-9]{3,5}" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseAlphaSpace">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[A-Z ]+" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseAlphaSpaceLength1to30">
		<xsd:restriction base="UpperCaseAlphaSpace">
			<xsd:minLength value="1" />
			<xsd:maxLength value="30" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseAlphaSpaceLength2to35">
		<xsd:restriction base="UpperCaseAlphaSpace">
			<xsd:minLength value="2" />
			<xsd:maxLength value="35" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseString">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[\P{Ll}]+" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1">
		<xsd:restriction base="UpperCaseString">
			<xsd:length value="1" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to10">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="10" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to25">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="25" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to127">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="127" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to13">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="13" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to15">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="15" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to17">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="17" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to19">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="19" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to2">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="2" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to20">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="20" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to216">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="216" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to22">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="22" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to3">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="3" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to30">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="30" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to34">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="34" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to35">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="35" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to4">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="4" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to45">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="45" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to5">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="5" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to50">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="50" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to55">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="55" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to6">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="6" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to60">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="60" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to62">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="62" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to65">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="65" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to7">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="7" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to70">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="70" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to71">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="71" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to75">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="75" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to9">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="9" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to98">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
			<xsd:maxLength value="98" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength2">
		<xsd:restriction base="UpperCaseString">
			<xsd:length value="2" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength2to5">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="2" />
			<xsd:maxLength value="5" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength3">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="3" />
			<xsd:maxLength value="3" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength3to5">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="3" />
			<xsd:maxLength value="5" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength4">
		<xsd:restriction base="UpperCaseString">
			<xsd:length value="4" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength4to5">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="4" />
			<xsd:maxLength value="5" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength5">
		<xsd:restriction base="UpperCaseString">
			<xsd:length value="5" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength5to9">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="5" />
			<xsd:maxLength value="9" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength6">
		<xsd:restriction base="UpperCaseString">
			<xsd:length value="6" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UpperCaseStringLength1to128">
		<xsd:restriction base="UpperCaseString">
			<xsd:minLength value="1" />
		</xsd:restriction>
	</xsd:simpleType>
	    <xsd:simpleType name="StringLength0to4">
    <xsd:annotation>
      <xsd:documentation>Used for Character Strings, length 0 to 8.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
	<xsd:simpleType name="_PaymentCardType">
		<xsd:restriction base="UpperCaseAlphaLength1to2">
			<xsd:enumeration value="AX" />
			<xsd:enumeration value="BC" />
			<xsd:enumeration value="BL" />
			<xsd:enumeration value="CB" />
			<xsd:enumeration value="DN" />
			<xsd:enumeration value="DS" />
			<xsd:enumeration value="EC" />
			<xsd:enumeration value="JC" />
			<xsd:enumeration value="MA" />
			<xsd:enumeration value="MC" />
			<xsd:enumeration value="TP" />
			<xsd:enumeration value="VI" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="_PaymentCardType_Other">
		<xsd:annotation>
			<xsd:documentation>This is intended to be used when the above enumeration list does not meet your needs.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="UpperCaseAlphaLength1to2" />
	</xsd:simpleType>
	<xsd:simpleType name="_flightNumberLiterals">
		<xsd:annotation>
			<xsd:documentation>This private type enumerates flight number literals used for ground links and open segments in an itinerary.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="OPEN" />
			<xsd:enumeration value="ARNK" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="_flightNumberPattern">
		<xsd:annotation>
			<xsd:documentation>This private simple type defines the base flight number structure: 1 to 4 digits followed by optional upper case letter. The upper case letter is a Operational Suffix used to distinguish two flights with the same number on the same day.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{1,4}[A-Z]?" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:group name="AirSegmentChoiceGroup">
		<xsd:choice>
			<xsd:element name="AirSegmentBundledSell" type="AirSegmentBundledSell.PNRB" />
			<xsd:element name="AirSegment" type="AirSegment.PNRB" />
			<xsd:element name="AirSegmentMultiLeg" type="AirSegmentMultiLeg.PNRB" />
			<xsd:element name="AirSegmentOpen" type="AirSegmentOpen.PNRB" />
			<xsd:element name="AirSegmentARNK" type="AirSegmentARNK.PNRB" />
			<xsd:element name="AirSegmentSellFromBSGInventory" type="AirSegmentSellFromBSGInventory.PNRB" />
		</xsd:choice>
	</xsd:group>
	<xsd:group name="ReservationChoiceGroup">
		<xsd:choice>
			<xsd:element name="PassengerReservation" type="PassengerReservation.PNRB" />
			<xsd:element name="BSGReservation" type="BSGReservation.PNRB" />
		</xsd:choice>
	</xsd:group>
	<xsd:group name="Segment.PNRB">
		<xsd:sequence>
			<xsd:group ref="AirSegmentChoiceGroup" />
		</xsd:sequence>
	</xsd:group>
	<xsd:attributeGroup name="BookingChannelGroup">
		<xsd:attribute name="Type" type="OTA_CodeType" use="required">
			<xsd:annotation>
				<xsd:documentation>The type of booking
					channel (e.g. Global Distribution System (GDS), Alternative
					Distribution System (ADS), Sales and Catering System (SCS),
					Property Management System (PMS), Central Reservation System (CRS),
					Tour Operator System (TOS), Internet and ALL). Refer to OTA Code
					List Booking Channel Type (BCT).</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="Primary" type="xsd:boolean">
			<xsd:annotation>
				<xsd:documentation>Indicates
					whether the enumerated booking channel is the primary means of
					connectivity used by the source.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>
	<xsd:attributeGroup name="CompanyID_AttributesGroup">
		<xsd:attribute name="CompanyShortName">
			<xsd:annotation>
				<xsd:documentation>Used to provide the company common name.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="TravelSector" type="OTA_CodeType">
			<xsd:annotation>
				<xsd:documentation>Refer to OTA Code List Travel Sector (TVS).</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="Code">
			<xsd:annotation>
				<xsd:documentation>Identifies a company by the company code.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="CodeContext">
			<xsd:annotation>
				<xsd:documentation>Identifies the context of the identifying code, such as DUNS, IATA or internal code, etc.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>
	<xsd:attributeGroup name="ID_Group">
		<xsd:attribute name="ID" use="required">
			<xsd:annotation>
				<xsd:documentation>A unique identifying
					value assigned by the creating system. The ID attribute may be used
					to reference a primary-key value within a database or in a
					particular implementation.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>
	<xsd:attributeGroup name="UniqueID_Group">
		<xsd:attribute name="URL" type="xsd:anyURI">
			<xsd:annotation>
				<xsd:documentation>URL that identifies the location associated with the record identified by the UniqueID.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="Type" type="OTA_CodeType" use="required">
			<xsd:annotation>
				<xsd:documentation>A reference to the type of object defined by the UniqueID element. Refer to OTA Code List Unique ID Type (UIT).</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="Instance">
			<xsd:annotation>
				<xsd:documentation>The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attributeGroup ref="ID_Group" />
		<xsd:attribute name="ID_Context">
			<xsd:annotation>
				<xsd:documentation>Used to identify the source of the identifier (e.g., IATA, ABTA).</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>
	
	<xsd:complexType name="getReservation.PNRB">
		<xsd:sequence>
	  <xsd:element name="UniqueID" minOccurs="1" type="UpperCaseStringLength6" maxOccurs="1">
	  	<xsd:annotation>
	  		<xsd:documentation>Unique reservation ID</xsd:documentation>
	  	</xsd:annotation></xsd:element>
	  <xsd:element name="CreateDate" type="xsd:date" minOccurs="0" maxOccurs="1">
	  	<xsd:annotation>
	  		<xsd:documentation>Only Required if Past Date Reservations Requested</xsd:documentation>
	  	</xsd:annotation></xsd:element>
	  	</xsd:sequence>
	  	<xsd:attribute name="Version" type="xsd:string" use="required">
	  	</xsd:attribute>
	  	
  </xsd:complexType>
  
  <xsd:complexType name="SegmentType.PNRB">
		<xsd:sequence>
			<xsd:element name="Air" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Flight reservation information.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="DepartureAirport" minOccurs="0" type="UpperCaseAlphaNumericLength3to5">
							<xsd:annotation>
								<xsd:documentation>Departure point of flight segment.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="ArrivalAirport" minOccurs="0" type="UpperCaseAlphaNumericLength3to5">
							<xsd:annotation>
								<xsd:documentation>Departure point of flight segment.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="OperatingAirlineCode" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation> The operating airline of the flight if it is a codeshare  flight.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="EquipmentType" type="UpperCaseAlphaLength0to3" minOccurs="0"/>
						<xsd:element name="MarketingAirlineCode" type="AirlineCode" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">Identifies a company by the company code.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="MarriageGrp" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>	
									<xsd:element name="Ind" type="xsd:string" minOccurs="0"/>
									<xsd:element name="Group" type="xsd:string" minOccurs="0"/>
									<xsd:element name="Sequence" type="xsd:string" minOccurs="0"/>
								</xsd:sequence>	
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="Seats" minOccurs="0" type="Seats.PNRB">
						</xsd:element>
						<xsd:element name="AirlineRefId" type="xsd:string" minOccurs="0"/>
						<xsd:element name="Eticket" type="xsd:boolean" minOccurs="0"/>
						<xsd:element name="DepartureDateTime" type="xsd:string" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation xml:lang="en"/>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="ArrivalDateTime" type="xsd:string" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation xml:lang="en"/>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="FlightNumber" type="FlightNumber" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation> The flight number of the flight.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="ClassOfService" type="UpperCaseAlphaLength1to2" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">Specific Booking Class for this segment.	</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="ActionCode" type="UpperCaseAlphaLength1to2" minOccurs="0"/>
						<xsd:element name="NumberInParty" type="Numeric1to99" minOccurs="0"/>
						<xsd:element minOccurs="0" name="SegmentSpecialRequests"
							type="ItinerarySpecialRequests.PNRB" />
					</xsd:sequence>
					<xsd:attribute name="index" type="Numeric1to9999" />
					<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
					<xsd:attribute name="op" type="OperationType.PNRB">
						<xsd:annotation>
							<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Vehicle" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Vehicle rental information.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="LineNumber" type="xsd:string" minOccurs="0"/>
						<xsd:element name="LineStatus" type="xsd:string" minOccurs="0"/>
						<xsd:element name="POSRequestorID" type="xsd:string" minOccurs="0"/>
						<xsd:element name="ConfId" type="xsd:string" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>A confirmation number by which this reservation can be uniquely identified. Value assigned by the creating system.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="VendorCode" type="xsd:string" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>Identifies the vendor associated with this information</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="PickUpLocation" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>A code to identify the pick up location, along with an optional code context.</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:sequence>
									<xsd:annotation>
										<xsd:documentation xml:lang="en">Code and optional string to describe a location point.</xsd:documentation>
									</xsd:annotation>
									<xsd:element name="LocationCode" type="xsd:string" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation xml:lang="en">Identifies a company by the company code.																			</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="LocationName" type="xsd:string" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation xml:lang="en">Identifies a company by the company code.																			</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="ServiceLocationName" type="xsd:string" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation xml:lang="en">Identifies the context of the identifying code, 																		such as DUNS, IATA or internal code, etc.
																	</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="CodeContext" type="xsd:string" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation xml:lang="en">Identifies the context of the identifying code, 																		such as DUNS, IATA or internal code, etc.
																	</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							  </xsd:element>
							<xsd:element name="ReturnLocation" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>A code to identify the return location, along with an optional code context.</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:annotation>
											<xsd:documentation xml:lang="en">Code and optional string to describe a location point.</xsd:documentation>
										</xsd:annotation>
										<xsd:element name="LocationCode" type="xsd:string" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation xml:lang="en">Identifies a company by the company code.																			</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="CodeContext" type="xsd:string" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation xml:lang="en">Identifies the context of the identifying code, 																		such as DUNS, IATA or internal code, etc.
																	</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
						
							<xsd:element name="PickUpDateTime" type="xsd:string" minOccurs="0"/>
							<xsd:element name="PickUpDay" type="xsd:string" minOccurs="0"/>
							<xsd:element name="ReturnDateTime" type="xsd:string" minOccurs="0"/>
							<xsd:element name="RentalRate" type="RentalRate.PNRB"/>
						<xsd:element name="PricedEquipment" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>A collection of special equipment that is part of this reservation, along with the charges associated with this equipment.</xsd:documentation>
								<xsd:documentation>The VehicleEquipmentPricedType complex type identifies the data that describes a priced piece of special equipment in association with the rental of a vehicle.  The data consists of the equipment and the correspondinng charge.</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:sequence>
									
									<xsd:element name="EquipType" type="xsd:string" minOccurs="0"/>
									<xsd:element name="Quantity" type="xsd:integer" minOccurs="0"/>

								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="VehSegmentInfo" type="VehSegmentInfo.PNRB"/>
					</xsd:sequence>
					<xsd:attribute name="index" type="Numeric1to9999" />
					<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
					<xsd:attribute name="op" type="OperationType.PNRB">
						<xsd:annotation>
							<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Hotel" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="Reservation" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">Hotel reservation information.</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:sequence>

									<xsd:element name="LineNumber" type="xsd:integer" minOccurs="0"/>
									<xsd:element name="LineType" type="xsd:string" minOccurs="0"/>
									<xsd:element name="LineStatus" type="xsd:string" minOccurs="0"/>
									<xsd:element name="POSRequestorID" type="xsd:string" minOccurs="0"/>
						
									<xsd:element name="SpecialPrefs" minOccurs="0">
										<xsd:complexType>
											<xsd:sequence>
												<xsd:element name="Text" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
											</xsd:sequence>
										</xsd:complexType>
									</xsd:element>
												
									<xsd:element name="RoomType" minOccurs="0">	
										<xsd:complexType>
											<xsd:sequence>
												<xsd:annotation>
													<xsd:documentation xml:lang="en">Summary version of the RoomTypeType, initially created for the Travel Itinerary Message set.</xsd:documentation>
												</xsd:annotation>
												<xsd:element name="RoomTypeCode" type="xsd:string" minOccurs="0">
													<xsd:annotation>
														<xsd:documentation xml:lang="en">Specfic system room type code, ex: A1K, A1Q etc.</xsd:documentation>
													</xsd:annotation>
												</xsd:element>
												<xsd:element name="NumberOfUnits" type="xsd:integer" minOccurs="0"/>
												<xsd:element name="ShortText" type="xsd:string" minOccurs="0"/>
											</xsd:sequence>
										</xsd:complexType>
													
									</xsd:element>
									
									<xsd:element name="RoomRates" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation xml:lang="en">Reservation rate(s).</xsd:documentation>
										</xsd:annotation>
										<xsd:complexType>
											<xsd:sequence>
												
												<xsd:element name="AmountBeforeTax" type="xsd:string" minOccurs="0"/>
												<xsd:element name="CurrencyCode" type="xsd:string" minOccurs="0"/>
								
											</xsd:sequence>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="GuestCounts" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation xml:lang="en">Number of guests associated with this reservation.</xsd:documentation>
										</xsd:annotation>
										<xsd:complexType>
											<xsd:sequence>
												<xsd:element name="GuestCount" type="xsd:integer" minOccurs="0"/>

												<xsd:element name="ExtraGuestCount" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
												<!-- <xsd:complexType>
													<xsd:attribute name="Count" type="xsd:string" use="optional"/>
												</xsd:complexType> -->
												</xsd:element>
												<xsd:element name="RollAwayCount" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
												<!--<xsd:complexType>
													<xsd:attribute name="Count" type="xsd:string" use="optional"/>
												</xsd:complexType>-->
												</xsd:element>
												<xsd:element name="CribCount" type="xsd:integer" minOccurs="0" maxOccurs="unbounded">
												<!--<xsd:complexType>
													<xsd:attribute name="Count" type="xsd:integer" use="optional"/>
												</xsd:complexType>-->
												</xsd:element>
												<xsd:element name="ReserveUnderName" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
												<xsd:element name="Name" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
											
											</xsd:sequence>
										</xsd:complexType>
									</xsd:element>

									<xsd:element name="TimeSpanStart" type="xsd:string" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation xml:lang="en">The starting value of the time span. </xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="TimeSpanDuration" type="xsd:string" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation xml:lang="en">The lexical representation for timeDuration is the [ISO 8601] extended format PnYn MnDTnH nMnS, where nY represents the number of years, nM the number of months, nD the number of days, 'T' is the date/time separator, nH the number of hours, nM the number of minutes and nS the number of seconds. The number of seconds can include decimal digits to arbitrary precision. As an example, 7 months, 2 days, 2hours and 30 minutes would be expressed as P0Y7M2DT2H30M0S. Truncated representations are allowed provided they conform to ISO 8601 format.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="TimeSpanEnd" type="xsd:string" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation xml:lang="en">The ending value of the time span. </xsd:documentation>
										</xsd:annotation>
									</xsd:element>
										
									<xsd:element name="Guarantee" minOccurs="0">
										<xsd:complexType>
											<xsd:annotation>
												<xsd:documentation xml:lang="en">The guarantee information to hold a reservation</xsd:documentation>
											</xsd:annotation>
											<xsd:sequence>
												<xsd:element name="PaymentCardNumber" minOccurs="0"/>
											</xsd:sequence>
										</xsd:complexType>
									</xsd:element>
											<xsd:element name="ChainCode" type="xsd:string" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation xml:lang="en">The code that identifies a hotel chain or management group. The hotel chain code is decided between vendors.  This attribute is optional if the hotel is an independent property that can be identified by the HotelCode attribute.</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="HotelCode" type="xsd:string" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation xml:lang="en">The code that uniquely identifies a single hotel property. The hotel code is decided between vendors.</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="HotelCityCode" type="xsd:string" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation xml:lang="en">The IATA city code; for example DCA, ORD.</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="HotelName" type="xsd:string" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation xml:lang="en"> A text field used to communicate the proper name of the hotel.</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
										
								</xsd:sequence>

							</xsd:complexType>
						</xsd:element>
						<xsd:element name="AdditionalInformation" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="ConfirmationNumber" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
									<xsd:element name="Address" minOccurs="0">
										<xsd:complexType>
											<xsd:sequence>
												<xsd:element name="AddressLine" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
												<xsd:element name="CountryCode" type="xsd:string" minOccurs="0"/>
											</xsd:sequence>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="ContactNumbers" minOccurs="0">
										<xsd:complexType>
											<xsd:sequence>
												<xsd:element name="PhoneNumber" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
												<xsd:element name="FaxNumber" type="xsd:string" minOccurs="0"/>
											</xsd:sequence>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="CancelPenaltyPolicyCode" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
									<xsd:element name="CustLoyaltyMembershipID" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
									<xsd:element name="IDNumber" minOccurs="0" type="xsd:string" maxOccurs="unbounded"/>
									<xsd:element name="CorporateIDNumber" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
									<xsd:element name="Text" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
					<xsd:attribute name="index" type="Numeric1to9999" />
					<xsd:attribute name="id" type="stl:UniqueIdentifier.PNRB" />
					<xsd:attribute name="op" type="OperationType.PNRB">
						<xsd:annotation>
							<xsd:documentation>C = Create, U = Update, D = Delete</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>	
	</xsd:complexType>
	<xsd:complexType name="VehicleCharges.PNRB">
		<xsd:annotation>
			<xsd:documentation>Information on the charges associated with this vehicle.  Such charges may include the base rental amount, additional mileage amounts, fuel costs, etc.</xsd:documentation>
		</xsd:annotation>
			<xsd:sequence>
				<xsd:element name="VehicleChargeAmount" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>The VehicleChargeType complex type defines information on a specific charge associated with the rental of a vehicle, including unit cost, quantity and total cost.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="ApproximateTotalChargeAmount" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="ApproximateTotalChargeRateType" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="NumDays" type="xsd:string" minOccurs="0"/>
				<xsd:element name="NumHours" type="xsd:string" minOccurs="0"/>
				<xsd:element name="Mileage" type="xsd:string" minOccurs="0"/>
				<xsd:element name="TotalMandatoryCharges" type="xsd:string" minOccurs="0"/>
				<xsd:element name="DropOffCharge" type="xsd:string" minOccurs="0"/>
				<xsd:element name="DropOffDecimalPlaces" type="xsd:integer" minOccurs="0"/>							
				<xsd:element name="GuaranteedInd" type="xsd:string" minOccurs="0"/>
			</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="RentalRate.PNRB">
		<xsd:annotation>
			<xsd:documentation>Information on the rates associated with this vehicle.  Rate information can include the distance and the base rental cost, along with information on the various factors that may infuence this rate.  </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>																		
			<xsd:element name="RateCode" type="xsd:string" minOccurs="0"/>
			<xsd:element name="RateGuaranteedQuoted" type="xsd:string" minOccurs="0"/>
			<xsd:element name="RateChanged" type="xsd:string" minOccurs="0"/>															
			<xsd:element name="ExtraMileageCharge" type="xsd:decimal" minOccurs="0"/>
			<xsd:element name="MileageCurrencyCode" type="xsd:string" minOccurs="0"/>
			<xsd:element name="MileageDecimalPlaces" type="xsd:integer" minOccurs="0"/>															
			<xsd:element name="MileageKilometersCode" type="xsd:string" minOccurs="0"/>																
			<xsd:element name="VehicleCharges" minOccurs="0" type="VehicleCharges.PNRB"/>
			<xsd:element name="RateQualifierCode" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Indicates the type of rates applicable to the customer, along with any discount number or promotional codes that affect the quoted rate.</xsd:documentation>
					<xsd:documentation>The RateQualifierCoreType complex type defines the rate information that is common to all transactions.  Such information may include rate codes, rate type, promotional codes, etc.  This information may be used to determine the rate that is made available.</xsd:documentation>
				</xsd:annotation>									
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="VehSegmentInfo.PNRB">
		<xsd:sequence>
			<xsd:element name="PricedOffLocServiceTelephone" type="xsd:string" minOccurs="0"/>
			<xsd:element name="PricedOffLocServiceFax" type="xsd:string" minOccurs="0"/>
			<xsd:element name="CorporateID" type="xsd:string" minOccurs="0"/>
			<xsd:element name="ClientID" type="xsd:string" minOccurs="0"/>
			<xsd:element name="CustLoyaltyMembershipID" type="xsd:string" minOccurs="0"/>
			<xsd:element name="InvoiceRemarks" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="Text" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Remarks" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="Text" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="PassengerName" type="xsd:string" minOccurs="0"/>
			<xsd:element name="VoucherType" type="xsd:string" minOccurs="0"/>
			<xsd:element name="VoucherBillingNumber" type="xsd:string" minOccurs="0"/>
			<xsd:element name="VoucherID" type="xsd:string" minOccurs="0"/>
			<xsd:element name="VoucherFormat" type="xsd:string" minOccurs="0"/>		
		</xsd:sequence>
	</xsd:complexType>
  
</xsd:schema>
